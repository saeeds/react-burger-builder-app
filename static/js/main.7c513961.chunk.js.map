{"version":3,"sources":["components/burger/burger-ingredient/burger-ingredient.styles.css","components/navigation/side-drawer/side-drawer.styles.css","components/UI/input/input.styles.css","components/burger/build-controls/build-control/build-control.styles.css","components/navigation/tool-bar/tool-bar.styles.css","components/navigation/navigation-items/navigation-item/navigation-item.styles.css","components/burger/build-controls/build-controls.styles.css","components/UI/button/button.styles.css","hoc/layout/layout.styles.css","assets/images/burger-logo.png","components/logo/logo.styles.css","components/navigation/navigation-items/navigation-items.styles.css","components/navigation/side-drawer/drawer-toggle/drawer-toggle.styles.css","components/UI/backdrop/backdrop.styles.css","components/burger/burger.styles.css","components/UI/modal/modal.styles.css","components/UI/spinner/spinner.styles.css","containers/checkout/contact-data/contact-data.styles.css","components/order/checkout-summery/checkout-summery.styles.css","components/order/order.styles.css","containers/auth/auth.styles.css","hoc/Auxiliary/Auxiliary.component.js","components/logo/logo.component.jsx","components/navigation/navigation-items/navigation-item/navigation-item.component.jsx","components/navigation/navigation-items/navigation-items.component.jsx","components/navigation/side-drawer/drawer-toggle/drawer-toggle.component.js","components/navigation/tool-bar/tool-bar.component.jsx","components/UI/backdrop/backdrop.component.jsx","components/navigation/side-drawer/side-drawer.component.jsx","hoc/layout/layout.component.jsx","components/burger/burger-ingredient/burger-ingredient.component.jsx","components/burger/burger.component.jsx","components/burger/build-controls/build-control/build-control.component.jsx","components/burger/build-controls/build-controls.component.jsx","components/UI/modal/modal.component.jsx","components/UI/button/button.component.jsx","components/burger/order-summery/order-summery.component.jsx","axios-orders.jsx","components/UI/spinner/spinner.component.jsx","hoc/with-error-handler/with-error-handler.component.jsx","store/actions/order.jsx","store/actions/auth.jsx","store/actions/actionTypes.jsx","containers/burger-builder/burger-builder.component.jsx","store/actions/burgerBuilder.jsx","components/UI/input/input.component.jsx","containers/checkout/contact-data/contact-data.component.jsx","components/order/checkout-summery/checkout-summery.component.jsx","containers/checkout/checkout.component.jsx","components/order/order.component.jsx","containers/orders/orders.component.jsx","containers/auth/auth.component.jsx","containers/auth/logout/logout.component.jsx","App.js","serviceWorker.js","store/utility.jsx","store/reducers/burgerBuilder.jsx","store/reducers/order.jsx","store/reducers/auth.jsx","index.js"],"names":["module","exports","Auxiliary","props","children","logo","className","styles","Logo","style","height","src","burgerLogo","alt","navigationItem","NavigationItem","exact","to","link","activeClassName","active","navigationItems","NavigationItems","isAuthenticated","drawerToggle","DrawerToggle","onClick","clicked","toolbar","Toolbar","drawerToggleClicked","DesktopOnly","isAuth","backdrop","show","Backdrop","sideDrawer","attechedClasses","SideDrawer","Close","open","Open","closed","join","Layout","state","showSideDrawer","sideDrawerClosedHandler","setState","sideDrawerToggleHandler","prevState","this","Content","Component","connect","auth","token","dispatch","BurgerIngredient","ingredient","type","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Salad","Bacon","burger","tarnsformedIngredients","Object","keys","ingredients","map","igKey","Array","_","i","key","reduce","arr","el","concat","length","Burger","buildControl","BuildControl","Label","label","Less","removed","disabled","More","added","controls","buildControls","BuildControls","price","toFixed","ctrl","ingredientAdded","ingredientRemove","purchasable","OrderButton","ordered","Modal","nextProps","nextState","console","log","modalStyle","transform","opacity","modalClosed","button","Button","btnType","orderSummery","ingredientSummery","textTransform","purchaseCanceled","purchaseContinued","instance","axios","create","baseURL","spinner","Loader","withErrorHandler","WrappedComponent","error","errorConfirmedHandler","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","eject","message","email","password","isSignup","authData","returnSecureToken","url","post","then","userId","expirationTime","data","idToken","localId","expiresIn","setTimeout","catch","authFail","setAuthRedirectPath","path","BurgerBuilder","purchasing","purchaseHandler","onSetAuthRedirectPath","history","push","purchaseCancelHandler","purchaseContinueHandler","onInitPurchase","onInitIngredients","sum","disableInfo","ings","onIngredientAdded","onIngredientRemoved","updatePurchaseState","burgerBuilde","totalPrice","ingName","ingredientName","get","initIngredients","setIngredients","actions","input","inputElement","validationError","inputClasses","InputElement","invalid","shouldValidate","touched","Invalid","elementType","elementConfig","value","onChange","changed","options","option","displayValue","Input","ContactData","orderForm","name","placeholder","validation","required","valid","street","zipCode","minLength","maxLength","isNumeric","country","isEmail","deliveryMethod","formIsValid","orderHandler","event","preventDefault","formData","formElementIdentifier","order","orderData","onOrderBurger","inputChangedHandler","inputIdentifier","updatedOrderForm","updatedFormElement","target","checkValidity","rules","isValid","trim","test","formElementsArray","id","config","form","onSubmit","formElement","loading","styes","orderId","purchaseBurgerSuccess","purchaseBurgerFail","WithErrorHandler","checkoutSummery","CheckoutSummary","width","margin","checkoutCancelled","checkoutContinued","Checkout","checkoutCancelledHandler","goBack","checkoutContinuedHandler","replace","summary","purchasedRedirect","purchased","match","component","Contactdata","amount","ingredientOutput","ig","display","border","padding","Order","parseFloat","Orders","onFetchOrders","orders","fetchedOrders","err","Auth","controlName","updatedControls","submitHandler","onAuth","switchAuthModeHandler","buildingBurger","authRedirect","errorMesage","authRedirectPath","building","Logout","onLogout","App","Boolean","window","location","hostname","updateObject","oldObject","initialState","INGREDIENT_PRICES","salad","bacon","cheese","meat","addIngredient","action","updatedIngredient","updateState","removeIngredient","updatedIng","updateSt","setIngredient","fetchIngredientFaild","reducer","purchaseInit","purchaseBurgerStart","newOrder","fetchOrdersStart","fetchOrdersSuccess","fetchOrdersFail","authStart","authSuccess","authLogout","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","burgerBuildeRreducer","orderRreducer","authRreducer","strore","createStore","applyMiddleware","thunk","app","store","basename","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7c513961.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"burger-ingredient-styles__BreadBottom__KOKFz\",\"BreadTop\":\"burger-ingredient-styles__BreadTop__1cQgQ\",\"Seeds1\":\"burger-ingredient-styles__Seeds1__1a5B9\",\"Seeds2\":\"burger-ingredient-styles__Seeds2__37Fs-\",\"Meat\":\"burger-ingredient-styles__Meat__1XHUy\",\"Cheese\":\"burger-ingredient-styles__Cheese__1Q9Xk\",\"Salad\":\"burger-ingredient-styles__Salad__10bce\",\"Bacon\":\"burger-ingredient-styles__Bacon__3zEFi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"side-drawer-styles__SideDrawer__pj94I\",\"Open\":\"side-drawer-styles__Open__1xhZ5\",\"Close\":\"side-drawer-styles__Close__20X3P\",\"Logo\":\"side-drawer-styles__Logo__1gwAb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"input-styles__Input__2ntgB\",\"Label\":\"input-styles__Label__s9MxL\",\"InputElement\":\"input-styles__InputElement__YDw1O\",\"Invalid\":\"input-styles__Invalid__1fXCL\",\"ValidationError\":\"input-styles__ValidationError__2Rmvp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"build-control-styles__BuildControl__2BNkn\",\"Label\":\"build-control-styles__Label__2LW68\",\"Less\":\"build-control-styles__Less__2sGAG\",\"More\":\"build-control-styles__More__1pg-M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"tool-bar-styles__Toolbar__TyBO9\",\"Logo\":\"tool-bar-styles__Logo__3qSLu\",\"DesktopOnly\":\"tool-bar-styles__DesktopOnly__THHkr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"navigation-item-styles__NavigationItem__1LEOV\",\"active\":\"navigation-item-styles__active__3VYLK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"build-controls-styles__BuildControls__1w8TX\",\"OrderButton\":\"build-controls-styles__OrderButton__36QuD\",\"enable\":\"build-controls-styles__enable__1YRi4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"button-styles__Button__3rset\",\"Success\":\"button-styles__Success__3FL8B\",\"Danger\":\"button-styles__Danger__3SPZ8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"layout-styles__Content__1vZyV\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"logo-styles__Logo__3R-Kh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"navigation-items-styles__NavigationItems__1NAZW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"drawer-toggle-styles__DrawerToggle__WW6U1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"backdrop-styles__Backdrop__23L0O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"burger-styles__Burger__1oxP7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"modal-styles__Modal__2uZGs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"spinner-styles__Loader__2y119\",\"load2\":\"spinner-styles__load2__sUbR9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"contact-data-styles__ContactData__3saUQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"checkout-summery-styles__CheckoutSummary__Scyzn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"order-styles__Order__3-fgp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"auth-styles__Auth__17m92\"};","const Auxiliary = (props) => props.children\r\nexport default Auxiliary\r\n","import React from \"react\";\r\nimport burgerLogo from \"../../assets/images/burger-logo.png\";\r\nimport styles from \"./logo.styles.css\";\r\nconst logo = (props) => (\r\n  <div className={styles.Logo} style={{height: props.height}}>\r\n    <img src={burgerLogo} alt=\"MyBurger\"  />\r\n  </div>\r\n);\r\n\r\nexport default logo;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport styles from \"./navigation-item.styles.css\";\r\nconst navigationItem = props => {\r\n  return (\r\n    <li className={styles.NavigationItem}>\r\n      <NavLink\r\n        exact={props.exact}\r\n        to={props.link}\r\n        activeClassName={styles.active}\r\n      >\r\n        {props.children}\r\n      </NavLink>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default navigationItem;\r\n","import React from \"react\";\r\nimport styles from \"./navigation-items.styles.css\";\r\nimport NavigationItem from \"./navigation-item/navigation-item.component\";\r\nconst navigationItems = props => (\r\n  <ul className={styles.NavigationItems}>\r\n    <NavigationItem exact link=\"/\">\r\n      Burger Builder\r\n    </NavigationItem>\r\n    {props.isAuthenticated ? (\r\n      <NavigationItem link=\"/Orders\">Orders</NavigationItem>\r\n    ) : null}\r\n    {!props.isAuthenticated ? (\r\n      <NavigationItem link=\"/auth\">Sign In</NavigationItem>\r\n    ) : (\r\n      <NavigationItem link=\"/logout\">Logout</NavigationItem>\r\n    )}\r\n  </ul>\r\n);\r\nexport default navigationItems;\r\n","import React from 'react'\r\nimport styles from './drawer-toggle.styles.css'\r\nconst drawerToggle = (props) => {\r\n    return (\r\n        <div className={styles.DrawerToggle} onClick={props.clicked}>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default drawerToggle\r\n","import React from \"react\";\r\nimport styles from \"./tool-bar.styles.css\";\r\nimport Logo from \"../../logo/logo.component\";\r\nimport NavigationItems from \"../navigation-items/navigation-items.component\";\r\nimport DrawerToggle from \"../side-drawer/drawer-toggle/drawer-toggle.component\";\r\nconst toolbar = props => (\r\n  <header className={styles.Toolbar}>\r\n    <DrawerToggle clicked={props.drawerToggleClicked} />\r\n    <div className={styles.Logo}>\r\n      <Logo />\r\n    </div>\r\n    <nav className={styles.DesktopOnly}>\r\n      <NavigationItems isAuthenticated={props.isAuth} />\r\n    </nav>\r\n  </header>\r\n);\r\nexport default toolbar;\r\n","import React from \"react\";\r\nimport styles from './backdrop.styles.css'\r\nconst backdrop = props => (props.show ? <div className={styles.Backdrop} onClick={props.clicked}> </div> : null);\r\nexport default backdrop;\r\n","import React from \"react\";\r\nimport styles from \"./side-drawer.styles.css\";\r\nimport Logo from \"../../logo/logo.component\";\r\nimport NavigationItems from \"../navigation-items/navigation-items.component\";\r\nimport Backdrop from \"../../UI/backdrop/backdrop.component\";\r\nimport Auxiliary from \"../../../hoc/Auxiliary/Auxiliary.component\";\r\nconst sideDrawer = props => {\r\n  let attechedClasses = [styles.SideDrawer, styles.Close];\r\n  if (props.open) {\r\n    attechedClasses = [styles.SideDrawer, styles.Open];\r\n  }\r\n  return (\r\n    <Auxiliary>\r\n      <Backdrop show={props.open} clicked={props.closed} />\r\n      <div className={attechedClasses.join(\" \")}>\r\n        <div className={styles.Logo}>\r\n          <Logo />\r\n        </div>\r\n        <nav>\r\n          <NavigationItems isAuthenticated={props.isAuth} />\r\n        </nav>\r\n      </div>\r\n    </Auxiliary>\r\n  );\r\n};\r\n\r\nexport default sideDrawer;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Auxiliary from \"../Auxiliary/Auxiliary.component\";\r\nimport styles from \"./layout.styles.css\";\r\nimport Toolbar from \"../../components/navigation/tool-bar/tool-bar.component\";\r\nimport SideDrawer from \"../../components/navigation/side-drawer/side-drawer.component\";\r\n\r\nclass Layout extends Component {\r\n  state = {\r\n    showSideDrawer: false\r\n  };\r\n\r\n  sideDrawerClosedHandler = () => {\r\n    this.setState({ showSideDrawer: false });\r\n  };\r\n\r\n  sideDrawerToggleHandler = () => {\r\n    this.setState(prevState => {\r\n      return { showSideDrawer: !prevState.showSideDrawer };\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Auxiliary>\r\n        <Toolbar\r\n          isAuth={this.props.isAuthenticated}\r\n          drawerToggleClicked={this.sideDrawerToggleHandler}\r\n        />\r\n        <SideDrawer\r\n          isAuth={this.props.isAuthenticated}\r\n          open={this.state.showSideDrawer}\r\n          closed={this.sideDrawerClosedHandler}\r\n        />\r\n        <main className={styles.Content}>{this.props.children}</main>\r\n      </Auxiliary>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isAuthenticated: state.auth.token !== null\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {};\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Layout);\r\n","import React, { Component } from \"react\";\r\nimport styles from \"./burger-ingredient.styles.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass BurgerIngredient extends Component {\r\n  render() {\r\n    let ingredient = null;\r\n    switch (this.props.type) {\r\n      case \"bread-bottom\":\r\n        ingredient = <div className={styles.BreadBottom}></div>;\r\n        break;\r\n      case \"bread-top\":\r\n        ingredient = (\r\n          <div className={styles.BreadTop}>\r\n            <div className={styles.Seeds1}></div>\r\n            <div className={styles.Seeds2}></div>\r\n          </div>\r\n        );\r\n        break;\r\n      case \"meat\":\r\n        ingredient = <div className={styles.Meat}></div>;\r\n        break;\r\n      case \"cheese\":\r\n        ingredient = <div className={styles.Cheese}></div>;\r\n        break;\r\n      case \"salad\":\r\n        ingredient = <div className={styles.Salad}></div>;\r\n        break;\r\n      case \"bacon\":\r\n        ingredient = <div className={styles.Bacon}></div>;\r\n        break;\r\n      default:\r\n        ingredient = null;\r\n    }\r\n    return ingredient;\r\n  }\r\n}\r\n\r\nBurgerIngredient.propTypes = {\r\n  type: PropTypes.string.isRequired\r\n};\r\n\r\nexport default BurgerIngredient;\r\n","import React from \"react\";\r\nimport styles from \"./burger.styles.css\";\r\nimport BurgerIngredient from \"./burger-ingredient/burger-ingredient.component\";\r\nconst burger = props => {\r\n  let tarnsformedIngredients = Object.keys(props.ingredients)\r\n    .map(igKey => {\r\n      return [...Array(props.ingredients[igKey])].map((_, i) => {\r\n        return <BurgerIngredient key={igKey + i} type={igKey} />;\r\n      });\r\n    })\r\n    .reduce((arr, el) => {\r\n      return arr.concat(el);\r\n    }, []);\r\n\r\n    if(tarnsformedIngredients.length === 0){\r\n      tarnsformedIngredients = <p>Please start adding ingredients!</p>\r\n    }\r\n\r\n  return (\r\n    <div className={styles.Burger}>\r\n      <BurgerIngredient type=\"bread-top\" />\r\n      {tarnsformedIngredients}\r\n      <BurgerIngredient type=\"bread-bottom\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default burger;\r\n","import React from \"react\";\r\nimport styles from \"./build-control.styles.css\";\r\nconst buildControl = props => {\r\n  return (\r\n    <div className={styles.BuildControl}>\r\n      <div className={styles.Label}>{props.label}</div>\r\n      <button\r\n        className={styles.Less}\r\n        onClick={props.removed}\r\n        disabled={props.disabled}\r\n      >\r\n        Less\r\n      </button>\r\n      <button className={styles.More} onClick={props.added}>\r\n        More\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default buildControl;\r\n","import React from \"react\";\r\nimport styles from \"./build-controls.styles.css\";\r\nimport BuildControl from \"./build-control/build-control.component\";\r\n\r\nconst controls = [\r\n  { label: \"Salad\", type: \"salad\" },\r\n  { label: \"Bacon\", type: \"bacon\" },\r\n  { label: \"Cheese\", type: \"cheese\" },\r\n  { label: \"Meat\", type: \"meat\" }\r\n];\r\nconst buildControls = props => {\r\n  return (\r\n    <div className={styles.BuildControls}>\r\n      <p>\r\n        Current Price: <strong> {props.price.toFixed(2)}</strong>\r\n      </p>\r\n      {controls.map(ctrl => (\r\n        <BuildControl\r\n          key={ctrl.label}\r\n          label={ctrl.label}\r\n          added={() => props.ingredientAdded(ctrl.type)}\r\n          removed={() => props.ingredientRemove(ctrl.type)}\r\n          disabled={props.disabled[ctrl.type]}\r\n        />\r\n      ))}\r\n      <button\r\n        disabled={!props.purchasable} \r\n        className={styles.OrderButton}\r\n        onClick={props.ordered}\r\n        >\r\n        {props.isAuth ? 'ORDER NOW' : 'SIGN UP TO ORDER'}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default buildControls;\r\n","import React, { Component } from \"react\";\r\nimport styles from \"./modal.styles.css\";\r\nimport Auxiliary from \"../../../hoc/Auxiliary/Auxiliary.component\";\r\nimport Backdrop from \"../backdrop/backdrop.component\";\r\nclass Modal extends Component {\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    return (\r\n      nextProps.show !== this.props.show ||\r\n      nextProps.children !== this.props.children\r\n    );\r\n  }\r\n\r\n  componentWillUpdate() {\r\n    console.log(\"[Modal] WillUpdate\");\r\n  }\r\n\r\n  render() {\r\n    const modalStyle = {\r\n      transform: this.props.show ? \"translateY(0)\" : \"translateY(-100vh)\",\r\n      opacity: this.props.show ? \"1\" : \"0\"\r\n    };\r\n\r\n    return (\r\n      <Auxiliary>\r\n        <Backdrop clicked={this.props.modalClosed} show={this.props.show} />\r\n        <div className={styles.Modal} style={modalStyle}>\r\n          {this.props.children}\r\n        </div>\r\n      </Auxiliary>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;\r\n","import React from \"react\";\r\nimport styles from \"./button.styles.css\";\r\nconst button = props => {\r\n  return (\r\n    <button\r\n      disabled={props.disabled}\r\n      className={[styles.Button, styles[props.btnType]].join(\" \")}\r\n      onClick={props.clicked}\r\n    >\r\n      {props.children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default button;\r\n","import React from \"react\";\r\nimport Auxiliary from \"../../../hoc/Auxiliary/Auxiliary.component\";\r\nimport Button from '../../UI/button/button.component'\r\nconst orderSummery = props => {\r\n  const ingredientSummery = Object.keys(props.ingredients).map(igKey => {\r\n    return (\r\n      <li key={igKey}>\r\n        <span style={{ textTransform: \"capitalize\" }}>{igKey}</span>:{\" \"}\r\n        {props.ingredients[igKey]}\r\n      </li>\r\n    );\r\n  });\r\n  return (\r\n    <Auxiliary>\r\n      <h3>Your Order</h3>\r\n      <p>A delicious burger with the following ingredients:</p>\r\n      <ul>{ingredientSummery}</ul>\r\n      <p><strong>Total Price: </strong>{props.price.toFixed(2)}</p>\r\n      <p>Continue to Checkout?</p>\r\n      <Button btnType='Danger' clicked={props.purchaseCanceled}>CANCEL</Button>\r\n      <Button btnType='Success' clicked={props.purchaseContinued}>CONTINUE</Button>\r\n    </Auxiliary>\r\n  );\r\n};\r\n\r\nexport default orderSummery;\r\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"https://burgerbuilder-c6548.firebaseio.com/\"\r\n});\r\n\r\nexport default instance;\r\n","import React from \"react\";\r\nimport styles from \"./spinner.styles.css\";\r\nconst spinner = () => {\r\n  return <div className={styles.Loader}>Loading...</div>;\r\n};\r\n\r\nexport default spinner;\r\n","import React, { Component } from \"react\";\r\nimport Modal from \"../../components/UI/modal/modal.component\";\r\nimport Aux from \"../Auxiliary/Auxiliary.component\";\r\nconst withErrorHandler = (WrappedComponent, axios) => {\r\n  return class extends Component {\r\n    state = {\r\n      error: null\r\n    };\r\n\r\n    componentWillMount() {\r\n      this.reqInterceptor = axios.interceptors.request.use(req => {\r\n        this.setState({ error: null });\r\n        return req;\r\n      });\r\n      this.resInterceptor = axios.interceptors.response.use(\r\n        res => res,\r\n        error => {\r\n          this.setState({ error: error });\r\n        }\r\n      );\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      axios.interceptors.request.eject(this.reqInterceptor);\r\n      axios.interceptors.response.eject(this.resInterceptor);\r\n    }\r\n    \r\n    errorConfirmedHandler = () => {\r\n      this.setState({ error: null });\r\n    };\r\n\r\n    render() {\r\n      return (\r\n        <Aux>\r\n          <Modal\r\n            show={this.state.error}\r\n            modalClosed={this.errorConfirmedHandler}\r\n          >\r\n            {this.state.error ? this.state.error.message : null}\r\n          </Modal>\r\n          <WrappedComponent {...this.props} />\r\n        </Aux>\r\n      );\r\n    }\r\n  };\r\n};\r\n\r\nexport default withErrorHandler;\r\n","import * as actionTypes from \"./actionTypes\";\r\nimport axios from \"../../axios-orders\";\r\n\r\nexport const purchaseBurgerSuccess = (id, orderData) => {\r\n  return {\r\n    type: actionTypes.PURCHASE_BURGER_SUCCESS,\r\n    orderId: id,\r\n    orderData: orderData\r\n  };\r\n};\r\n\r\nexport const purchaseBurgerFail = error => {\r\n  return {\r\n    type: actionTypes.PURCHASE_BURGER_FAIL,\r\n    error: error\r\n  };\r\n};\r\n\r\nexport const purchaseBurgerStart = () => {\r\n  return {\r\n    type: actionTypes.PURCHASE_BURGER_START\r\n  };\r\n};\r\n\r\nexport const purchaseBurger = (orderData,token) => {\r\n  return dispatch => {\r\n    dispatch(purchaseBurgerStart());\r\n    axios\r\n      .post(`/orders.json?auth=${token}`, orderData)\r\n      .then(response => {\r\n        dispatch(purchaseBurgerSuccess(response.data.name, orderData));\r\n      })\r\n      .catch(error => {\r\n        dispatch(purchaseBurgerFail(error));\r\n      });\r\n  };\r\n};\r\n\r\nexport const purchaseInit = () => {\r\n  return {\r\n    type: actionTypes.PURCHASE_INIT\r\n  };\r\n};\r\n\r\nexport const fetchOrdersSuccess = orders => {\r\n  return {\r\n    type: actionTypes.FETCH_ORDERS_SUCCESS,\r\n    orders: orders\r\n  };\r\n};\r\n\r\nexport const fetchOrdersFail = error => {\r\n  return {\r\n    type: actionTypes.FETCH_ORDERS_FAIL,\r\n    error: error\r\n  };\r\n};\r\n\r\nexport const fetchOrdersStart = () => {\r\n  return {\r\n    type: actionTypes.FETCH_ORDERS_START\r\n  };\r\n};\r\n\r\nexport const fetchOrders = (token) => {\r\n  return dispatch => {\r\n    dispatch(fetchOrdersStart());\r\n    axios\r\n      .get(`/orders.json?auth=${token}`)\r\n      .then(res => {\r\n        const fetchedOrders = [];\r\n        for (let key in res.data) {\r\n          fetchedOrders.push({\r\n            ...res.data[key],\r\n            id: key\r\n          });\r\n        }\r\n        dispatch(fetchOrdersSuccess(fetchedOrders));\r\n      })\r\n      .catch(err => {\r\n        dispatch(fetchOrdersFail(err));\r\n      });\r\n  };\r\n};\r\n","import * as actionTypes from \"./actionTypes\";\r\nimport axios from \"axios\";\r\n\r\nexport const authStart = () => {\r\n  return {\r\n    type: actionTypes.AUTH_START\r\n  };\r\n};\r\n\r\nexport const authSuccess = (token, userId) => {\r\n  return {\r\n    type: actionTypes.AUTH_SUCCESS,\r\n    idToken: token,\r\n    userId: userId\r\n  };\r\n};\r\n\r\nexport const authFail = error => {\r\n  return {\r\n    type: actionTypes.AUTH_FAIL,\r\n    error: error\r\n  };\r\n};\r\n\r\nexport const logout = () => {\r\n  return {\r\n    type: actionTypes.AUTH_LOGOUT\r\n  };\r\n};\r\n\r\nexport const checkAuthTimeout = expirationTime => {\r\n  return dispatch => {\r\n    setTimeout(() => {\r\n      dispatch(logout());\r\n    }, expirationTime * 1000);\r\n  };\r\n};\r\n\r\nexport const auth = (email, password, isSignup) => {\r\n  return dispatch => {\r\n    dispatch(authStart());\r\n    const authData = {\r\n      email: email,\r\n      password: password,\r\n      returnSecureToken: true\r\n    };\r\n\r\n    let url =\r\n      \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyBMo318n-fmawCeBKcsS9HDJ7fvTW1mtxw\";\r\n\r\n    if (!isSignup) {\r\n      url =\r\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyBMo318n-fmawCeBKcsS9HDJ7fvTW1mtxw\";\r\n    }\r\n\r\n    axios\r\n      .post(url, authData)\r\n      .then(response => {\r\n        console.log(response);\r\n        dispatch(authSuccess(response.data.idToken, response.data.localId));\r\n        dispatch(checkAuthTimeout(response.data.expiresIn));\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n        dispatch(authFail(error.response.data.error));\r\n      });\r\n  };\r\n};\r\n\r\nexport const setAuthRedirectPath = path => {\r\n  return {\r\n    type: actionTypes.SET_AUTH_REDIRECT_PATH,\r\n    path: path\r\n  };\r\n};\r\n","export const ADD_INGREDIENT = \"ADD_INGREDIENT\";\r\nexport const REMOVE_INGREDIENT = \"REMOVE_INGREDIENT\";\r\nexport const SET_INGREDIENTS = \"SET_INGREDIENTS\";\r\nexport const FETCH_INGREDIENTS_FAILD = \"FETCH_INGREDIENTS_FAILD\";\r\n\r\nexport const PURCHASE_BURGER_START = \"PURCHASE_BURGER_START\";\r\nexport const PURCHASE_BURGER_SUCCESS = \"PURCHASE_BURGER_SUCCESS\";\r\nexport const PURCHASE_BURGER_FAIL = \"PURCHASE_BURGER_FAIL\";\r\nexport const PURCHASE_INIT = \"PURCHASE_INIT\";\r\n\r\nexport const FETCH_ORDERS_START = \"FETCH_ORDERS_START\";\r\nexport const FETCH_ORDERS_SUCCESS = \"FETCH_ORDERS_SUCCESS\";\r\nexport const FETCH_ORDERS_FAIL = \"FETCH_ORDERS_FAIL\";\r\n\r\nexport const AUTH_START = \"AUTH_START\";\r\nexport const AUTH_SUCCESS = \"AUTH_SUCCESS\";\r\nexport const AUTH_FAIL = \"AUTH_FAIL\";\r\nexport const AUTH_LOGOUT = \"AUTH_LOGOUT\";\r\n\r\nexport const SET_AUTH_REDIRECT_PATH = 'SET_AUTH_REDIRECT_PATH';\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Auxiliary from \"../../hoc/Auxiliary/Auxiliary.component\";\r\nimport Burger from \"../../components/burger/burger.component\";\r\nimport BuildControls from \"../../components/burger/build-controls/build-controls.component\";\r\nimport Modal from \"../../components/UI/modal/modal.component\";\r\nimport OrderSummery from \"../../components/burger/order-summery/order-summery.component\";\r\nimport axios from \"../../axios-orders\";\r\nimport Spinner from \"../../components/UI/spinner/spinner.component\";\r\nimport withErrorHandler from \"../../hoc/with-error-handler/with-error-handler.component\";\r\nimport * as actions from \"../../store/actions/index\";\r\n\r\nclass BurgerBuilder extends Component {\r\n  state = {\r\n    purchasing: false\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.onInitIngredients();\r\n  }\r\n\r\n  purchaseHandler = () => {\r\n    if (this.props.isAuthenticated) {\r\n      this.setState({ purchasing: true });\r\n    } else {\r\n      this.props.onSetAuthRedirectPath('/checkout')\r\n      this.props.history.push(\"/auth\");\r\n    }\r\n  };\r\n\r\n  purchaseCancelHandler = () => this.setState({ purchasing: false });\r\n\r\n  purchaseContinueHandler = () => {\r\n    this.props.onInitPurchase();\r\n    this.props.history.push(\"/checkout\");\r\n  };\r\n\r\n  updatePurchaseState(ingredients) {\r\n    const sum = Object.keys(ingredients)\r\n      .map(igKey => {\r\n        return ingredients[igKey];\r\n      })\r\n      .reduce((sum, el) => {\r\n        return sum + el;\r\n      }, 0);\r\n\r\n    return sum > 0;\r\n  }\r\n\r\n  render() {\r\n    const disableInfo = {\r\n      ...this.props.ings\r\n    };\r\n    for (let key in disableInfo) {\r\n      disableInfo[key] = disableInfo[key] <= 0;\r\n    }\r\n\r\n    let orderSummery = null;\r\n    let burger = this.props.error ? (\r\n      <p>Ingredients can't be loaded!</p>\r\n    ) : (\r\n      <Spinner />\r\n    );\r\n\r\n    if (this.props.ings) {\r\n      burger = (\r\n        <Auxiliary>\r\n          <Burger ingredients={this.props.ings} />\r\n          <BuildControls\r\n            ingredientAdded={this.props.onIngredientAdded}\r\n            ingredientRemove={this.props.onIngredientRemoved}\r\n            disabled={disableInfo}\r\n            purchasable={this.updatePurchaseState(this.props.ings)}\r\n            ordered={this.purchaseHandler}\r\n            isAuth={this.props.isAuthenticated}\r\n            price={this.props.price}\r\n          />\r\n        </Auxiliary>\r\n      );\r\n\r\n      orderSummery = (\r\n        <OrderSummery\r\n          ingredients={this.props.ings}\r\n          purchaseCanceled={this.purchaseCancelHandler}\r\n          purchaseContinued={this.purchaseContinueHandler}\r\n          price={this.props.price}\r\n        />\r\n      );\r\n    }\r\n    return (\r\n      <Auxiliary>\r\n        <Modal\r\n          modalClosed={this.purchaseCancelHandler}\r\n          show={this.state.purchasing}\r\n        >\r\n          {orderSummery}\r\n        </Modal>\r\n        {burger}\r\n      </Auxiliary>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    ings: state.burgerBuilde.ingredients,\r\n    price: state.burgerBuilde.totalPrice,\r\n    error: state.burgerBuilde.error,\r\n    isAuthenticated: state.auth.token !== null\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onIngredientAdded: ingName => dispatch(actions.addIngredient(ingName)),\r\n    onIngredientRemoved: ingName => dispatch(actions.removeIngredient(ingName)),\r\n    onInitIngredients: () => dispatch(actions.initIngredients()),\r\n    onInitPurchase: () => dispatch(actions.purchaseInit()),\r\n    onSetAuthRedirectPath: (path) => dispatch(actions.setAuthRedirectPath(path))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withErrorHandler(BurgerBuilder, axios));\r\n\r\n// componentDidMount() {\r\n// axios\r\n//   .get(\"/ingredients.json\")\r\n//   .then(response => {\r\n//     this.setState({ ingredients: response.data });\r\n//   })\r\n//   .catch(error => {\r\n//     this.setState({ error: true });\r\n//   });\r\n//}\r\n// purchaseContinueHandler = () => {\r\n//   const queryParams = [];\r\n//   for (let ingredient in this.state.ingredients) {\r\n//     queryParams.push(\r\n//       `${encodeURIComponent(ingredient)}=${encodeURIComponent(\r\n//         this.state.ingredients[ingredient]\r\n//       )}`\r\n//     );\r\n//   }\r\n//   queryParams.push(\"price=\" + this.props.totalPrice);\r\n//   const queryString = queryParams.join(\"&\");\r\n//   this.props.history.push({\r\n//     pathname: \"/checkout\",\r\n//     search: `?${queryString}`\r\n//   });\r\n// };\r\n// addIngredientHandler = type => {\r\n//   const oldCount = this.state.ingredients[type];\r\n//   const updatedCount = oldCount + 1;\r\n//   const UpdatedIngredients = {\r\n//     ...this.state.ingredients\r\n//   };\r\n//   UpdatedIngredients[type] = updatedCount;\r\n//   const priceAddition = INGREDIENT_PRICES[type];\r\n//   const oldPrice = this.state.totalPrice;\r\n//   const newPrice = oldPrice + priceAddition;\r\n//   this.setState({\r\n//     ingredients: UpdatedIngredients,\r\n//     totalPrice: newPrice\r\n//   });\r\n//   this.updatePurchaseState(UpdatedIngredients);\r\n// };\r\n\r\n// removeIngredientHandler = type => {\r\n//   const oldCount = this.state.ingredients[type];\r\n//   if (oldCount <= 0) {\r\n//     return;\r\n//   }\r\n//   const updatedCount = oldCount - 1;\r\n//   const UpdatedIngredients = {\r\n//     ...this.state.ingredients\r\n//   };\r\n//   UpdatedIngredients[type] = updatedCount;\r\n//   const priceRemove = INGREDIENT_PRICES[type];\r\n//   const oldPrice = this.state.totalPrice;\r\n//   const newPrice = oldPrice - priceRemove;\r\n//   this.setState({\r\n//     ingredients: UpdatedIngredients,\r\n//     totalPrice: newPrice\r\n//   });\r\n//   this.updatePurchaseState(UpdatedIngredients);\r\n// };\r\n","import * as actionTypes from './actionTypes';\r\nimport axios from \"../../axios-orders\";\r\n\r\nexport const addIngredient = (name) => {\r\n    return {\r\n        type: actionTypes.ADD_INGREDIENT,\r\n        ingredientName: name\r\n    };\r\n}\r\n\r\nexport const removeIngredient = (name) => {\r\n    return {\r\n        type: actionTypes.REMOVE_INGREDIENT,\r\n        ingredientName: name\r\n    };\r\n}\r\n\r\nexport const setIngredients = (initIngredients) => {\r\n    return {\r\n        type: actionTypes.SET_INGREDIENTS,\r\n        ingredients: initIngredients\r\n    }\r\n}\r\n\r\nexport const fetchIngredientsFailed = () => {\r\n    return { type: actionTypes.FETCH_INGREDIENTS_FAILD }\r\n\r\n}\r\n\r\nexport const initIngredients = () => {\r\n    return dispatch => {\r\n        axios\r\n            .get(\"/ingredients.json\")\r\n            .then(response => {\r\n                console.log(`my object ${response.data}`);\r\n                dispatch(setIngredients(response.data));\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchIngredientsFailed());\r\n            });\r\n    }\r\n};","import React from \"react\";\r\nimport styles from \"./input.styles.css\";\r\nconst input = props => {\r\n  let inputElement = null;\r\n  let validationError = null;\r\n  const inputClasses = [styles.InputElement];\r\n  if (props.invalid && props.shouldValidate && props.touched) {\r\n    validationError = <p>Please enter a valid value!</p>;\r\n    inputClasses.push(styles.Invalid);\r\n  }\r\n  switch (props.elementType) {\r\n    case \"input\":\r\n      inputElement = (\r\n        <input\r\n          className={inputClasses.join(\" \")}\r\n          {...props.elementConfig}\r\n          value={props.value}\r\n          onChange={props.changed}\r\n        />\r\n      );\r\n      break;\r\n    case \"textarea\":\r\n      inputElement = (\r\n        <textarea\r\n          className={inputClasses.join(\" \")}\r\n          {...props.elementConfig}\r\n          value={props.value}\r\n          onChange={props.changed}\r\n        />\r\n      );\r\n      break;\r\n    case \"select\":\r\n      inputElement = (\r\n        <select\r\n          className={inputClasses.join(\" \")}\r\n          value={props.value}\r\n          onChange={props.changed}\r\n        >\r\n          {props.elementConfig.options.map(option => (\r\n            <option key={option.value} value={option.value}>\r\n              {option.displayValue}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      );\r\n      break;\r\n    default:\r\n      inputElement = (\r\n        <input\r\n          className={styles.InputElement}\r\n          {...props.elementConfig}\r\n          value={props.value}\r\n          onChange={props.changed}\r\n        />\r\n      );\r\n      break;\r\n  }\r\n\r\n  return (\r\n    <div className={styles.Input}>\r\n      <label className={styles.Label}>{props.label}</label>\r\n      {inputElement}\r\n      {validationError}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default input;\r\n","import React, { Component } from \"react\";\r\nimport Button from \"../../../components/UI/button/button.component\";\r\nimport styes from \"./contact-data.styles.css\";\r\nimport Spinner from \"../../../components/UI/spinner/spinner.component\";\r\nimport axios from \"../../../axios-orders\";\r\nimport Input from \"../../../components/UI/input/input.component\";\r\nimport { connect } from \"react-redux\";\r\nimport WithErrorHandler from \"../../../hoc/with-error-handler/with-error-handler.component\";\r\nimport * as actions from \"../../../store/actions/index\";\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    ings: state.burgerBuilde.ingredients,\r\n    price: state.burgerBuilde.totalPrice,\r\n    loading: state.order.loading,\r\n    token: state.auth.token\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onOrderBurger: (orderData, token) =>\r\n      dispatch(actions.purchaseBurger(orderData, token))\r\n  };\r\n};\r\n\r\nclass ContactData extends Component {\r\n  state = {\r\n    orderForm: {\r\n      name: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"text\",\r\n          placeholder: \"Your Name\"\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true\r\n        },\r\n        valid: false,\r\n        touched: false\r\n      },\r\n      street: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"text\",\r\n          placeholder: \"Street\"\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true\r\n        },\r\n        valid: false,\r\n        touched: false\r\n      },\r\n      zipCode: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"text\",\r\n          placeholder: \"ZIP Code\"\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          minLength: 5,\r\n          maxLength: 5,\r\n          isNumeric: true\r\n        },\r\n        valid: false,\r\n        touched: false\r\n      },\r\n      country: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"text\",\r\n          placeholder: \"Country\"\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true\r\n        },\r\n        valid: false,\r\n        touched: false\r\n      },\r\n      email: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"email\",\r\n          placeholder: \"Your E-Mail\"\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          isEmail: true\r\n        },\r\n        valid: false,\r\n        touched: false\r\n      },\r\n      deliveryMethod: {\r\n        elementType: \"select\",\r\n        elementConfig: {\r\n          options: [\r\n            { value: \"fastest\", displayValue: \"Fastest\" },\r\n            { value: \"cheapest\", displayValue: \"Cheapest\" }\r\n          ]\r\n        },\r\n        value: \"fastest\",\r\n        validation: {},\r\n        valid: true\r\n      }\r\n    },\r\n    formIsValid: false\r\n  };\r\n\r\n  orderHandler = event => {\r\n    event.preventDefault();\r\n\r\n    const formData = {};\r\n    for (let formElementIdentifier in this.state.orderForm) {\r\n      formData[formElementIdentifier] = this.state.orderForm[\r\n        formElementIdentifier\r\n      ].value;\r\n    }\r\n\r\n    const order = {\r\n      ingredients: this.props.ings,\r\n      price: this.props.price,\r\n      orderData: formData\r\n    };\r\n\r\n    this.props.onOrderBurger(order, this.props.token);\r\n  };\r\n\r\n  checkValidity(value, rules) {\r\n    let isValid = true;\r\n    if (!rules) {\r\n      return true;\r\n    }\r\n\r\n    if (rules.required) {\r\n      isValid = value.trim() !== \"\" && isValid;\r\n    }\r\n\r\n    if (rules.minLength) {\r\n      isValid = value.length >= rules.minLength && isValid;\r\n    }\r\n\r\n    if (rules.maxLength) {\r\n      isValid = value.length <= rules.maxLength && isValid;\r\n    }\r\n\r\n    if (rules.isEmail) {\r\n      const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n      isValid = pattern.test(value) && isValid;\r\n    }\r\n\r\n    if (rules.isNumeric) {\r\n      const pattern = /^\\d+$/;\r\n      isValid = pattern.test(value) && isValid;\r\n    }\r\n\r\n    return isValid;\r\n  }\r\n\r\n  inputChangedHandler = (event, inputIdentifier) => {\r\n    const updatedOrderForm = {\r\n      ...this.state.orderForm\r\n    };\r\n    const updatedFormElement = {\r\n      ...updatedOrderForm[inputIdentifier]\r\n    };\r\n    updatedFormElement.value = event.target.value;\r\n    updatedFormElement.valid = this.checkValidity(\r\n      updatedFormElement.value,\r\n      updatedFormElement.validation\r\n    );\r\n    updatedFormElement.touched = true;\r\n    updatedOrderForm[inputIdentifier] = updatedFormElement;\r\n\r\n    let formIsValid = true;\r\n    for (let inputIdentifier in updatedOrderForm) {\r\n      formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid;\r\n    }\r\n    this.setState({ orderForm: updatedOrderForm, formIsValid: formIsValid });\r\n  };\r\n\r\n  render() {\r\n    const formElementsArray = [];\r\n    for (let key in this.state.orderForm) {\r\n      formElementsArray.push({\r\n        id: key,\r\n        config: this.state.orderForm[key]\r\n      });\r\n    }\r\n    let form = (\r\n      <form onSubmit={this.orderHandler}>\r\n        {formElementsArray.map(formElement => (\r\n          <Input\r\n            key={formElement.id}\r\n            elementType={formElement.config.elementType}\r\n            elementConfig={formElement.config.elementConfig}\r\n            value={formElement.config.value}\r\n            invalid={!formElement.config.valid}\r\n            shouldValidate={formElement.config.validation}\r\n            touched={formElement.config.touched}\r\n            changed={event => this.inputChangedHandler(event, formElement.id)}\r\n          />\r\n        ))}\r\n        <Button btnType=\"Success\" disabled={!this.state.formIsValid}>\r\n          ORDER\r\n        </Button>\r\n      </form>\r\n    );\r\n    if (this.props.loading) {\r\n      form = <Spinner />;\r\n    }\r\n    return (\r\n      <div className={styes.ContactData}>\r\n        <h4>Enter your Contact Data</h4>\r\n        {form}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(WithErrorHandler(ContactData, axios));\r\n\r\n// axios\r\n// .post(\"/orders.json\", order)\r\n// .then(response => {\r\n//   this.setState({ loading: false });\r\n//   this.props.history.push(\"/\");\r\n// })\r\n// .catch(error => {\r\n//   this.setState({ loading: false });\r\n// });\r\n","import React from \"react\";\r\nimport Burger from \"../../burger/burger.component\";\r\nimport Button from \"../../UI/button/button.component\";\r\nimport styles from \"./checkout-summery.styles.css\";\r\nconst checkoutSummery = props => {\r\n  return (\r\n    <div className={styles.CheckoutSummary}>\r\n      <h1>We hope it tastes well!</h1>\r\n      <div style={{ width: \"100%\", margin: \"auto\" }}>\r\n        <Burger ingredients={props.ingredients} />\r\n      </div>\r\n      <Button btnType=\"Danger\" clicked={props.checkoutCancelled}>\r\n        CANCEL\r\n      </Button>\r\n      <Button btnType=\"Success\" clicked={props.checkoutContinued}>\r\n        CONTINUE\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default checkoutSummery;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport Contactdata from \"./contact-data/contact-data.component\";\r\nimport CheckoutSummery from \"../../components/order/checkout-summery/checkout-summery.component\";\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    ings: state.burgerBuilde.ingredients,\r\n    purchased: state.order.purchased\r\n  };\r\n};\r\n\r\nclass Checkout extends Component {\r\n  checkoutCancelledHandler = () => this.props.history.goBack();\r\n\r\n  checkoutContinuedHandler = () =>\r\n    this.props.history.replace(\"/checkout/contact-data\");\r\n\r\n  render() {\r\n    let summary = <Redirect to=\"/\" />;\r\n\r\n    if (this.props.ings) {\r\n      const purchasedRedirect = this.props.purchased ? (\r\n        <Redirect to=\"/\" />\r\n      ) : null;\r\n\r\n      summary = (\r\n        <div>\r\n          {purchasedRedirect}\r\n          <CheckoutSummery\r\n            checkoutCancelled={this.checkoutCancelledHandler}\r\n            checkoutContinued={this.checkoutContinuedHandler}\r\n            ingredients={this.props.ings}\r\n          />\r\n          <Route\r\n            path={`${this.props.match.path}/contact-data`}\r\n            component={Contactdata}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return summary;\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Checkout);\r\n\r\n// state = {\r\n//   ingredients: null,\r\n//   totalPrice: 0\r\n// };\r\n\r\n// componentWillMount() {\r\n//   const query = new URLSearchParams(this.props.location.search);\r\n//   const ingredients = {};\r\n//   let price = 0;\r\n//   for (let param of query.entries()) {\r\n//     if (param[0] === \"price\") {\r\n//       price = param[1];\r\n//     } else {\r\n//       ingredients[param[0]] = +param[1];\r\n//     }\r\n//   }\r\n//   this.setState({ ingredients: ingredients, totalPrice: price });\r\n// }\r\n","import React from \"react\";\r\nimport styles from \"./order.styles.css\";\r\nconst order = props => {\r\n  const ingredients = [];\r\n  for (let ingredientName in props.ingredients) {\r\n    ingredients.push({\r\n      name: ingredientName,\r\n      amount: props.ingredients[ingredientName]\r\n    });\r\n  }\r\n\r\n  const ingredientOutput = ingredients.map(ig => {\r\n    return (\r\n      <span\r\n        style={{\r\n          textTransform: \"capitalize\",\r\n          display: \"inline-block\",\r\n          margin: \"0 8px\",\r\n          border: \"1px solid #ccc\",\r\n          padding: \"5px\"\r\n        }}\r\n        key={ig.name}\r\n      >\r\n        {ig.name} ({ig.amount})\r\n      </span>\r\n    );\r\n  });\r\n  return (\r\n    <div className={styles.Order}>\r\n      <p>Ingredients: {ingredientOutput}</p>\r\n      <p>\r\n        Price: <strong>USD {parseFloat(props.price).toFixed(2)}</strong>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default order;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n//import styles from './orders.styles.css'\r\nimport Order from \"../../components/order/order.component\";\r\nimport axios from \"../../axios-orders\";\r\nimport withErrorHandler from \"../../hoc/with-error-handler/with-error-handler.component\";\r\nimport * as actions from \"../../store/actions/index\";\r\nimport Spinner from \"../../components/UI/spinner/spinner.component\";\r\n\r\nclass Orders extends Component {\r\n  componentDidMount() {\r\n    this.props.onFetchOrders(this.props.token);\r\n  }\r\n  render() {\r\n    let orders = <Spinner />;\r\n\r\n    if (!this.props.loading) {\r\n      orders = this.props.Orders.map(order => (\r\n        <Order\r\n          key={order.id}\r\n          ingredients={order.ingredients}\r\n          price={order.price}\r\n        />\r\n      ));\r\n    }\r\n\r\n    return <div>{orders}</div>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    Orders: state.order.orders,\r\n    loading: state.order.loading,\r\n    token: state.auth.token\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onFetchOrders: (token) => dispatch(actions.fetchOrders(token))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withErrorHandler(Orders, axios));\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport styles from \"./auth.styles.css\";\r\nimport Input from \"../../components/UI/input/input.component\";\r\nimport Button from \"../../components/UI/button/button.component\";\r\nimport * as actions from \"../../store/actions/index\";\r\nimport Spinner from \"../../components/UI/spinner/spinner.component\";\r\n\r\nclass Auth extends Component {\r\n  state = {\r\n    controls: {\r\n      email: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"email\",\r\n          placeholder: \"Mail Address\"\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          isEmail: true\r\n        },\r\n        valid: false,\r\n        touched: false\r\n      },\r\n      password: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"password\",\r\n          placeholder: \"Password\"\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          minLength: 6\r\n        },\r\n        valid: false,\r\n        touched: false\r\n      }\r\n    },\r\n    isSignup: true\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (!this.props.buildingBurger && this.props.authRedirect !== \"/\") {\r\n      this.props.onSetAuthRedirectPath();\r\n    }\r\n  }\r\n\r\n  checkValidity(value, rules) {\r\n    let isValid = true;\r\n    if (!rules) {\r\n      return true;\r\n    }\r\n\r\n    if (rules.required) {\r\n      isValid = value.trim() !== \"\" && isValid;\r\n    }\r\n\r\n    if (rules.minLength) {\r\n      isValid = value.length >= rules.minLength && isValid;\r\n    }\r\n\r\n    if (rules.maxLength) {\r\n      isValid = value.length <= rules.maxLength && isValid;\r\n    }\r\n\r\n    if (rules.isEmail) {\r\n      const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n      isValid = pattern.test(value) && isValid;\r\n    }\r\n\r\n    if (rules.isNumeric) {\r\n      const pattern = /^\\d+$/;\r\n      isValid = pattern.test(value) && isValid;\r\n    }\r\n\r\n    return isValid;\r\n  }\r\n\r\n  inputChangedHandler = (event, controlName) => {\r\n    const updatedControls = {\r\n      ...this.state.controls,\r\n      [controlName]: {\r\n        ...this.state.controls[controlName],\r\n        value: event.target.value,\r\n        valid: this.checkValidity(\r\n          event.target.value,\r\n          this.state.controls[controlName].validation\r\n        ),\r\n        touched: true\r\n      }\r\n    };\r\n\r\n    this.setState({ controls: updatedControls });\r\n  };\r\n\r\n  submitHandler = event => {\r\n    event.preventDefault();\r\n    this.props.onAuth(\r\n      this.state.controls.email.value,\r\n      this.state.controls.password.value,\r\n      this.state.isSignup\r\n    );\r\n  };\r\n\r\n  switchAuthModeHandler = () => {\r\n    this.setState(prevState => {\r\n      return { isSignup: !prevState.isSignup };\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const formElementsArray = [];\r\n    for (let key in this.state.controls) {\r\n      formElementsArray.push({\r\n        id: key,\r\n        config: this.state.controls[key]\r\n      });\r\n    }\r\n\r\n    let form = formElementsArray.map(formElement => (\r\n      <Input\r\n        key={formElement.id}\r\n        elementType={formElement.config.elementType}\r\n        elementConfig={formElement.config.elementConfig}\r\n        value={formElement.config.value}\r\n        invalid={!formElement.config.valid}\r\n        shouldValidate={formElement.config.validation}\r\n        touched={formElement.config.touched}\r\n        changed={event => this.inputChangedHandler(event, formElement.id)}\r\n      />\r\n    ));\r\n\r\n    if (this.props.loading) {\r\n      form = <Spinner />;\r\n    }\r\n\r\n    let errorMesage = null;\r\n    if (this.props.error) {\r\n      errorMesage = <p>{this.props.error.message}</p>;\r\n    }\r\n\r\n    let authRedirect = null;\r\n    if (this.props.isAuthenticated) {\r\n      authRedirect = <Redirect to={this.props.authRedirectPath} />;\r\n    }\r\n\r\n    return (\r\n      <div className={styles.Auth}>\r\n        {authRedirect}\r\n        {errorMesage}\r\n        <form onSubmit={this.submitHandler}>\r\n          {form}\r\n          <Button btnType=\"Success\">SUBMIT</Button>\r\n        </form>\r\n        <Button clicked={this.switchAuthModeHandler} btnType=\"Danger\">\r\n          SWITCH TO {this.state.isSignup ? \"SIGNIN\" : \"SIGNUP\"}\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    loading: state.auth.loading,\r\n    error: state.auth.error,\r\n    isAuthenticated: state.auth.token !== null,\r\n    buildingBurger: state.burgerBuilde.building,\r\n    authRedirectPath: state.auth.authRedirectPath\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onAuth: (email, password, isSignup) =>\r\n      dispatch(actions.auth(email, password, isSignup)),\r\n    onSetAuthRedirectPath: () => dispatch(actions.setAuthRedirectPath(\"/\"))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Auth);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport * as actions from \"../../../store/actions/index\";\r\n//import styles from './logout.styles.css';\r\n\r\nclass Logout extends Component {\r\n  componentDidMount() {\r\n    this.props.onLogout();\r\n  }\r\n\r\n  render() {\r\n    return <Redirect to=\"/\"/>;\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onLogout: () => dispatch(actions.logout())\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(Logout);\r\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom'\nimport Layout from './hoc/layout/layout.component';\nimport BurgerBuilder from './containers/burger-builder/burger-builder.component';\nimport Checkout from './containers/checkout/checkout.component';\nimport Orders from './containers/orders/orders.component';\nimport Auth from './containers/auth/auth.component';\nimport Logout from './containers/auth/logout/logout.component';\n\nfunction App() {\n  return (\n    <div >\n      <Layout>\n        <Switch>\n          <Route path=\"/checkout\" component={Checkout} />\n          <Route path=\"/orders\" component={Orders} />\n          <Route path=\"/auth\" component={Auth} />\n          <Route path=\"/logout\" component={Logout} />\n          <Route exact path=\"/\" component={BurgerBuilder} />\n        </Switch>\n      </Layout>\n    </div>\n  );\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const updateObject = (oldObject, updateObject) => {\r\n  return {\r\n    ...oldObject,\r\n    ...updateObject\r\n  };\r\n};\r\n","import * as actionTypes from \"../actions/actionTypes\";\r\nimport { updateObject } from \"../utility\";\r\nconst initialState = {\r\n  ingredients: null,\r\n  totalPrice: 4,\r\n  error: false,\r\n  building: true\r\n};\r\n\r\nconst INGREDIENT_PRICES = {\r\n  salad: 0.5,\r\n  bacon: 0.4,\r\n  cheese: 1.3,\r\n  meat: 0.7\r\n};\r\n\r\nconst addIngredient = (state, action) => {\r\n  const updatedIngredient = {\r\n    [action.ingredientName]: state.ingredients[action.ingredientName] + 1\r\n  };\r\n  const updatedIngredients = updateObject(state.ingredients, updatedIngredient);\r\n  const updateState = {\r\n    ingredients: updatedIngredients,\r\n    totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\r\n    building: true\r\n  };\r\n  return updateObject(state, updateState);\r\n};\r\n\r\nconst removeIngredient = (state, action) => {\r\n  const updatedIng = {\r\n    [action.ingredientName]: state.ingredients[action.ingredientName] - 1\r\n  };\r\n  const updatedIngs = updateObject(state.ingredients, updatedIng);\r\n  const updateSt = {\r\n    ingredients: updatedIngs,\r\n    totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName],\r\n    building: true\r\n  };\r\n  return updateObject(state, updateSt);\r\n};\r\n\r\nconst setIngredient = (state, action) => {\r\n  return updateObject(state, {\r\n    ingredients: {\r\n      salad: action.ingredients.salad,\r\n      bacon: action.ingredients.bacon,\r\n      cheese: action.ingredients.cheese,\r\n      meat: action.ingredients.meat\r\n    },\r\n    totalPrice: 4,\r\n    error: false,\r\n    building: false\r\n  });\r\n};\r\n\r\nconst fetchIngredientFaild = (state, action) => {\r\n  return updateObject(state, { error: true });\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.ADD_INGREDIENT:\r\n      return addIngredient(state, action);\r\n    case actionTypes.REMOVE_INGREDIENT:\r\n      return removeIngredient(state, action);\r\n    case actionTypes.SET_INGREDIENTS:\r\n      return setIngredient(state, action);\r\n    case actionTypes.FETCH_INGREDIENTS_FAILD:\r\n      return fetchIngredientFaild(state, action);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import * as actionTypes from \"../actions/actionTypes\";\r\nimport { updateObject } from \"../utility\";\r\n\r\nconst initialState = {\r\n  orders: [],\r\n  loading: false,\r\n  purchased: false\r\n};\r\n\r\nconst purchaseInit = (state, action) => {\r\n  return updateObject(state, { purchased: false });\r\n};\r\n\r\nconst purchaseBurgerStart = (state, action) => {\r\n  return updateObject(state, { loading: true });\r\n};\r\n\r\nconst purchaseBurgerSuccess = (state, action) => {\r\n  const newOrder = updateObject(action.orderData, { id: action.orderId });\r\n  return updateObject(state, {\r\n    loading: false,\r\n    purchased: true,\r\n    orders: state.orders.concat(newOrder)\r\n  });\r\n};\r\n\r\nconst purchaseBurgerFail = (state, action) => {\r\n  return updateObject(state, { loading: false });\r\n};\r\n\r\nconst fetchOrdersStart = (state, action) => {\r\n  return updateObject(state, { loading: true });\r\n};\r\n\r\nconst fetchOrdersSuccess = (state, action) => {\r\n  return updateObject(state, { orders: action.orders, loading: false });\r\n};\r\nconst fetchOrdersFail = (state, action) => {\r\n  return updateObject(state, { loading: false });\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.PURCHASE_INIT:\r\n      return purchaseInit(state, action);\r\n    case actionTypes.PURCHASE_BURGER_START:\r\n      return purchaseBurgerStart(state, action);\r\n    case actionTypes.PURCHASE_BURGER_SUCCESS:\r\n      return purchaseBurgerSuccess(state, action);\r\n    case actionTypes.PURCHASE_BURGER_FAIL:\r\n      return purchaseBurgerFail(state, action);\r\n    case actionTypes.FETCH_ORDERS_START:\r\n      return fetchOrdersStart(state, action);\r\n    case actionTypes.FETCH_ORDERS_SUCCESS:\r\n      return fetchOrdersSuccess(state, action);\r\n    case actionTypes.FETCH_ORDERS_FAIL:\r\n      return fetchOrdersFail(state, action);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import * as actionTypes from \"../actions/actionTypes\";\r\nimport { updateObject } from \"../utility\";\r\nimport { stat } from \"fs\";\r\nconst initialState = {\r\n  token: null,\r\n  userId: null,\r\n  error: null,\r\n  loading: false,\r\n  authRedirectPath: \"/\"\r\n};\r\n\r\nconst authStart = (state, action) => {\r\n  return updateObject(state, { error: null, loading: true });\r\n};\r\n\r\nconst authSuccess = (state, action) => {\r\n  return updateObject(state, {\r\n    token: action.idToken,\r\n    userId: action.userId,\r\n    error: null,\r\n    loading: false\r\n  });\r\n};\r\n\r\nconst authFail = (state, action) => {\r\n  return updateObject(state, { error: action.error, loading: false });\r\n};\r\n\r\nconst authLogout = state => {\r\n  return updateObject(state, { token: null, userId: null });\r\n};\r\n\r\nconst setAuthRedirectPath = (state, action) => {\r\n  return updateObject(state, { authRedirectPath: action.path });\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.AUTH_START:\r\n      return authStart(state, action);\r\n    case actionTypes.AUTH_SUCCESS:\r\n      return authSuccess(state, action);\r\n    case actionTypes.AUTH_FAIL:\r\n      return authFail(state, action);\r\n    case actionTypes.AUTH_LOGOUT:\r\n      return authLogout(state);\r\n    case actionTypes.SET_AUTH_REDIRECT_PATH:\r\n      return setAuthRedirectPath(state, action);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport burgerBuildeRreducer from './store/reducers/burgerBuilder';\nimport orderRreducer from './store/reducers/order';\nimport authRreducer from './store/reducers/auth';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({\n    burgerBuilde: burgerBuildeRreducer,\n    order: orderRreducer,\n    auth: authRreducer\n});\n\nconst strore = createStore(rootReducer, composeEnhancers(\n    applyMiddleware(thunk)\n));\n\nconst app = (\n    <Provider store={strore}>\n        <BrowserRouter basename=\"/react-burger-builder-app\">\n            <App />\n        </BrowserRouter>\n    </Provider>\n)\n\nReactDOM.render(app, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}