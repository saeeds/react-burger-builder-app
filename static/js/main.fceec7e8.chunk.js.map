{"version":3,"sources":["components/burger/burger-ingredient/burger-ingredient.styles.css","components/burger/build-controls/build-control/build-control.styles.css","components/burger/burger.styles.css","components/burger/build-controls/build-controls.styles.css","hoc/Auxiliary.js","components/layout/layout.component.jsx","components/burger/burger-ingredient/burger-ingredient.component.jsx","components/burger/burger.component.jsx","components/burger/build-controls/build-control/build-control.component.jsx","components/burger/build-controls/build-controls.component.jsx","containers/burger-builder/burger-builder.component.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Auxiliary","props","children","Layout","className","styles","Content","BurgerIngredient","ingredient","this","type","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Salad","Bacon","Component","Burger","tarnsformedIngredients","Object","keys","ingredients","map","igKey","Array","_","i","key","reduce","arr","el","concat","length","buildControl","BuildControl","Label","label","Less","onClick","removed","More","added","controls","buildControls","BuildControls","ctrl","ingredientAdded","removeIngredient","INGREDIENT_PRICES","salad","bacon","cheese","meat","BurgerBuilder","state","totalPrice","addIngredientHandler","updatedCount","UpdatedIngredients","priceAddition","newPrice","setState","removeIngredientHandler","oldCount","priceRemove","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fceec7e8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"burger-ingredient-styles__BreadBottom__KOKFz\",\"BreadTop\":\"burger-ingredient-styles__BreadTop__1cQgQ\",\"Seeds1\":\"burger-ingredient-styles__Seeds1__1a5B9\",\"Seeds2\":\"burger-ingredient-styles__Seeds2__37Fs-\",\"Meat\":\"burger-ingredient-styles__Meat__1XHUy\",\"Cheese\":\"burger-ingredient-styles__Cheese__1Q9Xk\",\"Salad\":\"burger-ingredient-styles__Salad__10bce\",\"Bacon\":\"burger-ingredient-styles__Bacon__3zEFi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"build-control-styles__BuildControl__2BNkn\",\"Label\":\"build-control-styles__Label__2LW68\",\"Less\":\"build-control-styles__Less__2sGAG\",\"More\":\"build-control-styles__More__1pg-M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"burger-styles__Burger__1oxP7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"build-controls-styles__BuildControls__1w8TX\"};","const Auxiliary = (props) => props.children\r\nexport default Auxiliary\r\n","import React from 'react'\r\nimport Auxiliary from '../../hoc/Auxiliary'\r\nimport styles from './layout.component.jsx'\r\nconst Layout = (props) => {\r\n    return (\r\n        <Auxiliary>\r\n          <div>Toolbar, SideDrawer, Backdrop</div>\r\n          <main className={styles.Content} >\r\n              {props.children}\r\n          </main>\r\n        </Auxiliary>\r\n    )\r\n}\r\nexport default Layout\r\n","import React, { Component } from \"react\";\r\nimport styles from \"./burger-ingredient.styles.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass BurgerIngredient extends Component {\r\n  render() {\r\n    let ingredient = null;\r\n    switch (this.props.type) {\r\n      case \"bread-bottom\":\r\n        ingredient = <div className={styles.BreadBottom}></div>;\r\n        break;\r\n      case \"bread-top\":\r\n        ingredient = (\r\n          <div className={styles.BreadTop}>\r\n            <div className={styles.Seeds1}></div>\r\n            <div className={styles.Seeds2}></div>\r\n          </div>\r\n        );\r\n        break;\r\n      case \"meat\":\r\n        ingredient = <div className={styles.Meat}></div>;\r\n        break;\r\n      case \"cheese\":\r\n        ingredient = <div className={styles.Cheese}></div>;\r\n        break;\r\n      case \"salad\":\r\n        ingredient = <div className={styles.Salad}></div>;\r\n        break;\r\n      case \"bacon\":\r\n        ingredient = <div className={styles.Bacon}></div>;\r\n        break;\r\n      default:\r\n        ingredient = null;\r\n    }\r\n    return ingredient;\r\n  }\r\n}\r\n\r\nBurgerIngredient.propTypes = {\r\n  type: PropTypes.string.isRequired\r\n};\r\n\r\nexport default BurgerIngredient;\r\n","import React from \"react\";\r\nimport styles from \"./burger.styles.css\";\r\nimport BurgerIngredient from \"./burger-ingredient/burger-ingredient.component\";\r\nconst Burger = props => {\r\n  let tarnsformedIngredients = Object.keys(props.ingredients)\r\n    .map(igKey => {\r\n      return [...Array(props.ingredients[igKey])].map((_, i) => {\r\n        return <BurgerIngredient key={igKey + i} type={igKey} />;\r\n      });\r\n    })\r\n    .reduce((arr, el) => {\r\n      return arr.concat(el);\r\n    }, []);\r\n\r\n    if(tarnsformedIngredients.length === 0){\r\n      tarnsformedIngredients = <p>Please start adding ingredients!</p>\r\n    }\r\n\r\n  return (\r\n    <div className={styles.Burger}>\r\n      <BurgerIngredient type=\"bread-top\" />\r\n      {tarnsformedIngredients}\r\n      <BurgerIngredient type=\"bread-bottom\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Burger;\r\n","import React from \"react\";\r\nimport styles from \"./build-control.styles.css\";\r\nconst buildControl = props => {\r\n  return (\r\n    <div className={styles.BuildControl}>\r\n      <div className={styles.Label}>{props.label}</div>\r\n      <button className={styles.Less} onClick={props.removed}>Less</button>\r\n      <button className={styles.More} onClick={props.added}>More</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default buildControl;\r\n","import React from \"react\";\r\nimport styles from \"./build-controls.styles.css\";\r\nimport BuildControl from \"./build-control/build-control.component\";\r\n\r\nconst controls = [\r\n  { label: \"Salad\", type: \"salad\" },\r\n  { label: \"Bacon\", type: \"bacon\" },\r\n  { label: \"Cheese\", type: \"cheese\" },\r\n  { label: \"Meat\", type: \"meat\" }\r\n];\r\nconst buildControls = props => {\r\n  return (\r\n    <div className={styles.BuildControls}>\r\n      {controls.map(ctrl => (\r\n        <BuildControl\r\n          key={ctrl.label}\r\n          label={ctrl.label}\r\n          added={() => props.ingredientAdded(ctrl.type)}\r\n          removed={() => props.removeIngredient(ctrl.type)}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default buildControls;\r\n","import React, { Component } from \"react\";\r\nimport Auxiliary from \"../../hoc/Auxiliary\";\r\nimport Burger from \"../../components/burger/burger.component\";\r\nimport BuildControls from \"../../components/burger/build-controls/build-controls.component\";\r\n\r\nconst INGREDIENT_PRICES = {\r\n  salad: 0.5,\r\n  bacon: 0.4,\r\n  cheese: 1.3,\r\n  meat: 0.7\r\n};\r\nexport default class BurgerBuilder extends Component {\r\n  //constructor(props) {\r\n  //   super(props);\r\n  // }\r\n\r\n  state = {\r\n    ingredients: {\r\n      salad: 0,\r\n      bacon: 0,\r\n      cheese: 0,\r\n      meat: 0\r\n    },\r\n    totalPrice: 4\r\n  };\r\n\r\n  addIngredientHandler = type => {\r\n    const oldCount = this.state.ingredients[type];\r\n    const updatedCount = oldCount + 1;\r\n    const UpdatedIngredients = {\r\n      ...this.state.ingredients\r\n    };\r\n    UpdatedIngredients[type] = updatedCount;\r\n    const priceAddition = INGREDIENT_PRICES[type];\r\n    const oldPrice = this.state.totalPrice;\r\n    const newPrice = oldPrice + priceAddition;\r\n    this.setState({\r\n      ingredients: UpdatedIngredients,\r\n      totalPrice: newPrice\r\n    });\r\n  };\r\n\r\n  removeIngredientHandler = type => {\r\n    const oldCount = this.state.ingredients[type];\r\n    if(oldCount === 0){\r\n      return;\r\n    }\r\n    const updatedCount = oldCount - 1;\r\n    const UpdatedIngredients = {\r\n      ...this.state.ingredients\r\n    };\r\n    UpdatedIngredients[type] = updatedCount;\r\n    const priceRemove = INGREDIENT_PRICES[type];\r\n    const oldPrice = this.state.totalPrice;\r\n    const newPrice = oldPrice - priceRemove;\r\n    this.setState({\r\n      ingredients: UpdatedIngredients,\r\n      totalPrice: newPrice\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Auxiliary>\r\n        <Burger ingredients={this.state.ingredients} />\r\n        <BuildControls \r\n          ingredientAdded={this.addIngredientHandler}\r\n          removeIngredient = {this.removeIngredientHandler}\r\n        />\r\n      </Auxiliary>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport Layout from './components/layout/layout.component'\nimport BurgerBuilder from './containers/burger-builder/burger-builder.component'\nfunction App() {\n  return (\n    <div >\n      <Layout>\n        <BurgerBuilder />\n      </Layout>\n    </div>\n  );\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}