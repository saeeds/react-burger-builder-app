{"version":3,"sources":["components/burger/burger-ingredient/burger-ingredient.styles.css","components/navigation/side-drawer/side-drawer.styles.css","components/UI/input/input.styles.css","components/burger/build-controls/build-control/build-control.styles.css","components/navigation/tool-bar/tool-bar.styles.css","components/navigation/navigation-items/navigation-item/navigation-item.styles.css","components/burger/build-controls/build-controls.styles.css","components/UI/button/button.styles.css","hoc/layout/layout.styles.css","assets/images/burger-logo.png","components/logo/logo.styles.css","components/navigation/navigation-items/navigation-items.styles.css","components/navigation/side-drawer/drawer-toggle/drawer-toggle.styles.css","components/UI/backdrop/backdrop.styles.css","components/burger/burger.styles.css","components/UI/modal/modal.styles.css","components/UI/spinner/spinner.styles.css","containers/checkout/contact-data/contact-data.styles.css","components/order/checkout-summery/checkout-summery.styles.css","components/order/order.styles.css","hoc/Auxiliary/Auxiliary.component.js","components/logo/logo.component.jsx","components/navigation/navigation-items/navigation-item/navigation-item.component.jsx","components/navigation/navigation-items/navigation-items.component.jsx","components/navigation/side-drawer/drawer-toggle/drawer-toggle.component.js","components/navigation/tool-bar/tool-bar.component.jsx","components/UI/backdrop/backdrop.component.jsx","components/navigation/side-drawer/side-drawer.component.jsx","hoc/layout/layout.component.jsx","components/burger/burger-ingredient/burger-ingredient.component.jsx","components/burger/burger.component.jsx","components/burger/build-controls/build-control/build-control.component.jsx","components/burger/build-controls/build-controls.component.jsx","components/UI/modal/modal.component.jsx","components/UI/button/button.component.jsx","components/burger/order-summery/order-summery.component.jsx","axios-orders.jsx","components/UI/spinner/spinner.component.jsx","hoc/with-error-handler/with-error-handler.component.jsx","containers/burger-builder/burger-builder.component.jsx","store/actions/burgerBuilder.jsx","store/actions/actionTypes.jsx","store/actions/order.jsx","components/UI/input/input.component.jsx","containers/checkout/contact-data/contact-data.component.jsx","components/order/checkout-summery/checkout-summery.component.jsx","containers/checkout/checkout.component.jsx","components/order/order.component.jsx","containers/orders/orders.component.jsx","App.js","serviceWorker.js","store/utility.jsx","store/reducers/burgerBuilder.jsx","store/reducers/order.jsx","index.js"],"names":["module","exports","Auxiliary","props","children","logo","className","styles","Logo","style","height","src","burgerLogo","alt","navigationItem","NavigationItem","exact","to","link","activeClassName","active","navigationItems","NavigationItems","drawerToggle","DrawerToggle","onClick","clicked","toolbar","Toolbar","drawerToggleClicked","DesktopOnly","backdrop","show","Backdrop","sideDrawer","attechedClasses","SideDrawer","Close","open","Open","closed","join","Layout","state","showSideDrawer","sideDrawerClosedHandler","setState","sideDrawerToggleHandler","prevState","this","Content","Component","BurgerIngredient","ingredient","type","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Salad","Bacon","burger","tarnsformedIngredients","Object","keys","ingredients","map","igKey","Array","_","i","key","reduce","arr","el","concat","length","Burger","buildControl","BuildControl","Label","label","Less","removed","disabled","More","added","controls","buildControls","BuildControls","price","toFixed","ctrl","ingredientAdded","ingredientRemove","purchasable","OrderButton","ordered","Modal","nextProps","nextState","console","log","modalStyle","transform","opacity","modalClosed","button","Button","bntType","orderSummery","ingredientSummery","textTransform","purchaseCanceled","purchaseContinued","instance","axios","create","baseURL","spinner","Loader","withErrorHandler","WrappedComponent","error","errorConfirmedHandler","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","eject","message","BurgerBuilder","purchasing","purchaseHandler","purchaseCancelHandler","purchaseContinueHandler","onInitPurchase","history","push","onInitIngredients","sum","disableInfo","ings","onIngredientAdded","onIngredientRemoved","updatePurchaseState","connect","burgerBuilde","totalPrice","purchased","order","dispatch","ingName","ingredientName","get","then","data","initIngredients","setIngredients","catch","input","inputElement","validationError","inputClasses","InputElement","invalid","shouldValidate","touched","Invalid","elementType","elementConfig","value","onChange","changed","options","option","displayValue","Input","ContactData","orderForm","name","placeholder","validation","required","valid","street","zipCode","minLength","maxLength","isNumeric","country","email","isEmail","deliveryMethod","formIsValid","orderHandler","event","preventDefault","formData","formElementIdentifier","orderData","onOrderBurger","inputChangedHandler","inputIdentifier","updatedOrderForm","updatedFormElement","target","checkValidity","rules","isValid","trim","test","formElementsArray","id","config","form","onSubmit","formElement","btnType","loading","styes","post","orderId","purchaseBurgerSuccess","purchaseBurgerFail","actions","WithErrorHandler","checkoutSummery","CheckoutSummary","width","margin","checkoutCancelled","checkoutContinued","Checkout","checkoutCancelledHandler","goBack","checkoutContinuedHandler","replace","summary","purchasedRedirect","path","match","component","Contactdata","amount","ingredientOutput","ig","display","border","padding","Order","parseFloat","Orders","onFetchOrders","orders","fetchedOrders","err","App","Boolean","window","location","hostname","updateObject","oldObject","initialState","INGREDIENT_PRICES","salad","bacon","cheese","meat","addIngredient","action","updatedIngredient","updateState","removeIngredient","updatedIng","updateSt","setIngredient","fetchIngredientFaild","reducer","purchaseInit","purchaseBurgerStart","newOrder","fetchOrdersStart","fetchOrdersSuccess","fetchOrdersFail","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","burgerBuildeRreducer","orderRreducer","strore","createStore","applyMiddleware","thunk","app","store","basename","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.09cca4ad.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"burger-ingredient-styles__BreadBottom__KOKFz\",\"BreadTop\":\"burger-ingredient-styles__BreadTop__1cQgQ\",\"Seeds1\":\"burger-ingredient-styles__Seeds1__1a5B9\",\"Seeds2\":\"burger-ingredient-styles__Seeds2__37Fs-\",\"Meat\":\"burger-ingredient-styles__Meat__1XHUy\",\"Cheese\":\"burger-ingredient-styles__Cheese__1Q9Xk\",\"Salad\":\"burger-ingredient-styles__Salad__10bce\",\"Bacon\":\"burger-ingredient-styles__Bacon__3zEFi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"side-drawer-styles__SideDrawer__pj94I\",\"Open\":\"side-drawer-styles__Open__1xhZ5\",\"Close\":\"side-drawer-styles__Close__20X3P\",\"Logo\":\"side-drawer-styles__Logo__1gwAb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"input-styles__Input__2ntgB\",\"Label\":\"input-styles__Label__s9MxL\",\"InputElement\":\"input-styles__InputElement__YDw1O\",\"Invalid\":\"input-styles__Invalid__1fXCL\",\"ValidationError\":\"input-styles__ValidationError__2Rmvp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"build-control-styles__BuildControl__2BNkn\",\"Label\":\"build-control-styles__Label__2LW68\",\"Less\":\"build-control-styles__Less__2sGAG\",\"More\":\"build-control-styles__More__1pg-M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"tool-bar-styles__Toolbar__TyBO9\",\"Logo\":\"tool-bar-styles__Logo__3qSLu\",\"DesktopOnly\":\"tool-bar-styles__DesktopOnly__THHkr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"navigation-item-styles__NavigationItem__1LEOV\",\"active\":\"navigation-item-styles__active__3VYLK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"build-controls-styles__BuildControls__1w8TX\",\"OrderButton\":\"build-controls-styles__OrderButton__36QuD\",\"enable\":\"build-controls-styles__enable__1YRi4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"button-styles__Button__3rset\",\"Success\":\"button-styles__Success__3FL8B\",\"Danger\":\"button-styles__Danger__3SPZ8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"layout-styles__Content__1vZyV\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"logo-styles__Logo__3R-Kh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"navigation-items-styles__NavigationItems__1NAZW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"drawer-toggle-styles__DrawerToggle__WW6U1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"backdrop-styles__Backdrop__23L0O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"burger-styles__Burger__1oxP7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"modal-styles__Modal__2uZGs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"spinner-styles__Loader__2y119\",\"load2\":\"spinner-styles__load2__sUbR9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"contact-data-styles__ContactData__3saUQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"checkout-summery-styles__CheckoutSummary__Scyzn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"order-styles__Order__3-fgp\"};","const Auxiliary = (props) => props.children\r\nexport default Auxiliary\r\n","import React from \"react\";\r\nimport burgerLogo from \"../../assets/images/burger-logo.png\";\r\nimport styles from \"./logo.styles.css\";\r\nconst logo = (props) => (\r\n  <div className={styles.Logo} style={{height: props.height}}>\r\n    <img src={burgerLogo} alt=\"MyBurger\"  />\r\n  </div>\r\n);\r\n\r\nexport default logo;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport styles from \"./navigation-item.styles.css\";\r\nconst navigationItem = props => {\r\n  return (\r\n    <li className={styles.NavigationItem}>\r\n      <NavLink\r\n        exact={props.exact}\r\n        to={props.link}\r\n        activeClassName={styles.active}\r\n      >\r\n        {props.children}\r\n      </NavLink>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default navigationItem;\r\n","import React from \"react\";\r\nimport styles from \"./navigation-items.styles.css\";\r\nimport NavigationItem from \"./navigation-item/navigation-item.component\";\r\nconst navigationItems = () => (\r\n  <ul className={styles.NavigationItems}>\r\n    <NavigationItem exact link=\"/\">Burger Builder</NavigationItem>\r\n    <NavigationItem link=\"/Orders\">Orders</NavigationItem>\r\n  </ul>\r\n);\r\nexport default navigationItems;\r\n","import React from 'react'\r\nimport styles from './drawer-toggle.styles.css'\r\nconst drawerToggle = (props) => {\r\n    return (\r\n        <div className={styles.DrawerToggle} onClick={props.clicked}>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default drawerToggle\r\n","import React from \"react\";\r\nimport styles from \"./tool-bar.styles.css\";\r\nimport Logo from \"../../logo/logo.component\";\r\nimport NavigationItems from \"../navigation-items/navigation-items.component\";\r\nimport DrawerToggle from \"../side-drawer/drawer-toggle/drawer-toggle.component\";\r\nconst toolbar = props => (\r\n  <header className={styles.Toolbar}>\r\n    <DrawerToggle clicked={props.drawerToggleClicked} />\r\n    <div className={styles.Logo}>\r\n      <Logo />\r\n    </div>\r\n    <nav className={styles.DesktopOnly}>\r\n      <NavigationItems />\r\n    </nav>\r\n  </header>\r\n);\r\nexport default toolbar;\r\n","import React from \"react\";\r\nimport styles from './backdrop.styles.css'\r\nconst backdrop = props => (props.show ? <div className={styles.Backdrop} onClick={props.clicked}> </div> : null);\r\nexport default backdrop;\r\n","import React from \"react\";\r\nimport styles from \"./side-drawer.styles.css\";\r\nimport Logo from \"../../logo/logo.component\";\r\nimport NavigationItems from \"../navigation-items/navigation-items.component\";\r\nimport Backdrop from \"../../UI/backdrop/backdrop.component\";\r\nimport Auxiliary from \"../../../hoc/Auxiliary/Auxiliary.component\";\r\nconst sideDrawer = props => {\r\n  let attechedClasses = [styles.SideDrawer, styles.Close];\r\n  if (props.open) {\r\n    attechedClasses = [styles.SideDrawer, styles.Open];\r\n  }\r\n  return (\r\n    <Auxiliary>\r\n      <Backdrop show={props.open} clicked={props.closed} />\r\n      <div className={attechedClasses.join(' ')}>\r\n        <div className={styles.Logo}>\r\n          <Logo />\r\n        </div>\r\n        <nav>\r\n          <NavigationItems></NavigationItems>\r\n        </nav>\r\n      </div>\r\n    </Auxiliary>\r\n  );\r\n};\r\n\r\nexport default sideDrawer;\r\n","import React, { Component } from \"react\";\r\nimport Auxiliary from \"../Auxiliary/Auxiliary.component\";\r\nimport styles from \"./layout.styles.css\";\r\nimport Toolbar from \"../../components/navigation/tool-bar/tool-bar.component\";\r\nimport SideDrawer from \"../../components/navigation/side-drawer/side-drawer.component\";\r\nclass Layout extends Component {\r\n  state = {\r\n    showSideDrawer: false\r\n  };\r\n\r\n  sideDrawerClosedHandler = () => {\r\n    this.setState({ showSideDrawer: false });\r\n  };\r\n\r\n  sideDrawerToggleHandler = () => {\r\n    this.setState(prevState => {\r\n      return { showSideDrawer: !prevState.showSideDrawer };\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Auxiliary>\r\n        <Toolbar drawerToggleClicked={this.sideDrawerToggleHandler} />\r\n        <SideDrawer\r\n          open={this.state.showSideDrawer}\r\n          closed={this.sideDrawerClosedHandler}\r\n        />\r\n        <main className={styles.Content}>{this.props.children}</main>\r\n      </Auxiliary>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Layout;\r\n","import React, { Component } from \"react\";\r\nimport styles from \"./burger-ingredient.styles.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass BurgerIngredient extends Component {\r\n  render() {\r\n    let ingredient = null;\r\n    switch (this.props.type) {\r\n      case \"bread-bottom\":\r\n        ingredient = <div className={styles.BreadBottom}></div>;\r\n        break;\r\n      case \"bread-top\":\r\n        ingredient = (\r\n          <div className={styles.BreadTop}>\r\n            <div className={styles.Seeds1}></div>\r\n            <div className={styles.Seeds2}></div>\r\n          </div>\r\n        );\r\n        break;\r\n      case \"meat\":\r\n        ingredient = <div className={styles.Meat}></div>;\r\n        break;\r\n      case \"cheese\":\r\n        ingredient = <div className={styles.Cheese}></div>;\r\n        break;\r\n      case \"salad\":\r\n        ingredient = <div className={styles.Salad}></div>;\r\n        break;\r\n      case \"bacon\":\r\n        ingredient = <div className={styles.Bacon}></div>;\r\n        break;\r\n      default:\r\n        ingredient = null;\r\n    }\r\n    return ingredient;\r\n  }\r\n}\r\n\r\nBurgerIngredient.propTypes = {\r\n  type: PropTypes.string.isRequired\r\n};\r\n\r\nexport default BurgerIngredient;\r\n","import React from \"react\";\r\nimport styles from \"./burger.styles.css\";\r\nimport BurgerIngredient from \"./burger-ingredient/burger-ingredient.component\";\r\nconst burger = props => {\r\n  let tarnsformedIngredients = Object.keys(props.ingredients)\r\n    .map(igKey => {\r\n      return [...Array(props.ingredients[igKey])].map((_, i) => {\r\n        return <BurgerIngredient key={igKey + i} type={igKey} />;\r\n      });\r\n    })\r\n    .reduce((arr, el) => {\r\n      return arr.concat(el);\r\n    }, []);\r\n\r\n    if(tarnsformedIngredients.length === 0){\r\n      tarnsformedIngredients = <p>Please start adding ingredients!</p>\r\n    }\r\n\r\n  return (\r\n    <div className={styles.Burger}>\r\n      <BurgerIngredient type=\"bread-top\" />\r\n      {tarnsformedIngredients}\r\n      <BurgerIngredient type=\"bread-bottom\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default burger;\r\n","import React from \"react\";\r\nimport styles from \"./build-control.styles.css\";\r\nconst buildControl = props => {\r\n  return (\r\n    <div className={styles.BuildControl}>\r\n      <div className={styles.Label}>{props.label}</div>\r\n      <button\r\n        className={styles.Less}\r\n        onClick={props.removed}\r\n        disabled={props.disabled}\r\n      >\r\n        Less\r\n      </button>\r\n      <button className={styles.More} onClick={props.added}>\r\n        More\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default buildControl;\r\n","import React from \"react\";\r\nimport styles from \"./build-controls.styles.css\";\r\nimport BuildControl from \"./build-control/build-control.component\";\r\n\r\nconst controls = [\r\n  { label: \"Salad\", type: \"salad\" },\r\n  { label: \"Bacon\", type: \"bacon\" },\r\n  { label: \"Cheese\", type: \"cheese\" },\r\n  { label: \"Meat\", type: \"meat\" }\r\n];\r\nconst buildControls = props => {\r\n  return (\r\n    <div className={styles.BuildControls}>\r\n      <p>\r\n        Current Price: <strong> {props.price.toFixed(2)}</strong>\r\n      </p>\r\n      {controls.map(ctrl => (\r\n        <BuildControl\r\n          key={ctrl.label}\r\n          label={ctrl.label}\r\n          added={() => props.ingredientAdded(ctrl.type)}\r\n          removed={() => props.ingredientRemove(ctrl.type)}\r\n          disabled={props.disabled[ctrl.type]}\r\n        />\r\n      ))}\r\n      <button\r\n        disabled={!props.purchasable} \r\n        className={styles.OrderButton}\r\n        onClick={props.ordered}\r\n        >\r\n        ORDER NOW\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default buildControls;\r\n","import React, { Component } from \"react\";\r\nimport styles from \"./modal.styles.css\";\r\nimport Auxiliary from \"../../../hoc/Auxiliary/Auxiliary.component\";\r\nimport Backdrop from \"../backdrop/backdrop.component\";\r\nclass Modal extends Component {\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    return (\r\n      nextProps.show !== this.props.show ||\r\n      nextProps.children !== this.props.children\r\n    );\r\n  }\r\n\r\n  componentWillUpdate() {\r\n    console.log(\"[Modal] WillUpdate\");\r\n  }\r\n\r\n  render() {\r\n    const modalStyle = {\r\n      transform: this.props.show ? \"translateY(0)\" : \"translateY(-100vh)\",\r\n      opacity: this.props.show ? \"1\" : \"0\"\r\n    };\r\n\r\n    return (\r\n      <Auxiliary>\r\n        <Backdrop clicked={this.props.modalClosed} show={this.props.show} />\r\n        <div className={styles.Modal} style={modalStyle}>\r\n          {this.props.children}\r\n        </div>\r\n      </Auxiliary>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;\r\n","import React from \"react\";\r\nimport styles from \"./button.styles.css\";\r\nconst button = props => {\r\n  return (\r\n    <button\r\n      disabled={props.disabled}\r\n      className={[styles.Button, styles[props.bntType]].join(\" \")}\r\n      onClick={props.clicked}\r\n    >\r\n      {props.children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default button;\r\n","import React from \"react\";\r\nimport Auxiliary from \"../../../hoc/Auxiliary/Auxiliary.component\";\r\nimport Button from '../../UI/button/button.component'\r\nconst orderSummery = props => {\r\n  const ingredientSummery = Object.keys(props.ingredients).map(igKey => {\r\n    return (\r\n      <li key={igKey}>\r\n        <span style={{ textTransform: \"capitalize\" }}>{igKey}</span>:{\" \"}\r\n        {props.ingredients[igKey]}\r\n      </li>\r\n    );\r\n  });\r\n  return (\r\n    <Auxiliary>\r\n      <h3>Your Order</h3>\r\n      <p>A delicious burger with the following ingredients:</p>\r\n      <ul>{ingredientSummery}</ul>\r\n      <p><strong>Total Price: </strong>{props.price.toFixed(2)}</p>\r\n      <p>Continue to Checkout?</p>\r\n      <Button bntType='Danger' clicked={props.purchaseCanceled}>CANCEL</Button>\r\n      <Button bntType='Success' clicked={props.purchaseContinued}>CONTINUE</Button>\r\n    </Auxiliary>\r\n  );\r\n};\r\n\r\nexport default orderSummery;\r\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"https://burgerbuilder-c6548.firebaseio.com/\"\r\n});\r\n\r\nexport default instance;\r\n","import React from \"react\";\r\nimport styles from \"./spinner.styles.css\";\r\nconst spinner = () => {\r\n  return <div className={styles.Loader}>Loading...</div>;\r\n};\r\n\r\nexport default spinner;\r\n","import React, { Component } from \"react\";\r\nimport Modal from \"../../components/UI/modal/modal.component\";\r\nimport Aux from \"../Auxiliary/Auxiliary.component\";\r\nconst withErrorHandler = (WrappedComponent, axios) => {\r\n  return class extends Component {\r\n    state = {\r\n      error: null\r\n    };\r\n\r\n    componentWillMount() {\r\n      this.reqInterceptor = axios.interceptors.request.use(req => {\r\n        this.setState({ error: null });\r\n        return req;\r\n      });\r\n      this.resInterceptor = axios.interceptors.response.use(\r\n        res => res,\r\n        error => {\r\n          this.setState({ error: error });\r\n        }\r\n      );\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      axios.interceptors.request.eject(this.reqInterceptor);\r\n      axios.interceptors.response.eject(this.resInterceptor);\r\n    }\r\n    \r\n    errorConfirmedHandler = () => {\r\n      this.setState({ error: null });\r\n    };\r\n\r\n    render() {\r\n      return (\r\n        <Aux>\r\n          <Modal\r\n            show={this.state.error}\r\n            modalClosed={this.errorConfirmedHandler}\r\n          >\r\n            {this.state.error ? this.state.error.message : null}\r\n          </Modal>\r\n          <WrappedComponent {...this.props} />\r\n        </Aux>\r\n      );\r\n    }\r\n  };\r\n};\r\n\r\nexport default withErrorHandler;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Auxiliary from \"../../hoc/Auxiliary/Auxiliary.component\";\r\nimport Burger from \"../../components/burger/burger.component\";\r\nimport BuildControls from \"../../components/burger/build-controls/build-controls.component\";\r\nimport Modal from \"../../components/UI/modal/modal.component\";\r\nimport OrderSummery from \"../../components/burger/order-summery/order-summery.component\";\r\nimport axios from \"../../axios-orders\";\r\nimport Spinner from \"../../components/UI/spinner/spinner.component\";\r\nimport withErrorHandler from \"../../hoc/with-error-handler/with-error-handler.component\";\r\nimport * as actions from \"../../store/actions/index\";\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    ings: state.burgerBuilde.ingredients,\r\n    price: state.burgerBuilde.totalPrice,\r\n    error: state.burgerBuilde.error,\r\n    purchased: state.order.purchased\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onIngredientAdded: ingName => dispatch(actions.addIngredient(ingName)),\r\n    onIngredientRemoved: ingName => dispatch(actions.removeIngredient(ingName)),\r\n    onInitIngredients: () => dispatch(actions.initIngredients()),\r\n    onInitPurchase: () => dispatch(actions.purchaseInit())\r\n  };\r\n};\r\n\r\nclass BurgerBuilder extends Component {\r\n  state = {\r\n    purchasing: false\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.onInitIngredients();\r\n  }\r\n\r\n  purchaseHandler = () => this.setState({ purchasing: true });\r\n\r\n  purchaseCancelHandler = () => this.setState({ purchasing: false });\r\n\r\n  purchaseContinueHandler = () => {\r\n    this.props.onInitPurchase();\r\n    this.props.history.push(\"/checkout\");\r\n  };\r\n\r\n  updatePurchaseState(ingredients) {\r\n    const sum = Object.keys(ingredients)\r\n      .map(igKey => {\r\n        return ingredients[igKey];\r\n      })\r\n      .reduce((sum, el) => {\r\n        return sum + el;\r\n      }, 0);\r\n\r\n    return sum > 0;\r\n  }\r\n\r\n  render() {\r\n    const disableInfo = {\r\n      ...this.props.ings\r\n    };\r\n    for (let key in disableInfo) {\r\n      disableInfo[key] = disableInfo[key] <= 0;\r\n    }\r\n\r\n    let orderSummery = null;\r\n    let burger = this.props.error ? (\r\n      <p>Ingredients can't be loaded!</p>\r\n    ) : (\r\n      <Spinner />\r\n    );\r\n\r\n    if (this.props.ings) {\r\n      burger = (\r\n        <Auxiliary>\r\n          <Burger ingredients={this.props.ings} />\r\n          <BuildControls\r\n            ingredientAdded={this.props.onIngredientAdded}\r\n            ingredientRemove={this.props.onIngredientRemoved}\r\n            disabled={disableInfo}\r\n            purchasable={this.updatePurchaseState(this.props.ings)}\r\n            ordered={this.purchaseHandler}\r\n            price={this.props.price}\r\n          />\r\n        </Auxiliary>\r\n      );\r\n\r\n      orderSummery = (\r\n        <OrderSummery\r\n          ingredients={this.props.ings}\r\n          purchaseCanceled={this.purchaseCancelHandler}\r\n          purchaseContinued={this.purchaseContinueHandler}\r\n          price={this.props.price}\r\n        />\r\n      );\r\n    }\r\n    return (\r\n      <Auxiliary>\r\n        <Modal\r\n          modalClosed={this.purchaseCancelHandler}\r\n          show={this.state.purchasing}\r\n        >\r\n          {orderSummery}\r\n        </Modal>\r\n        {burger}\r\n      </Auxiliary>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withErrorHandler(BurgerBuilder, axios));\r\n\r\n// componentDidMount() {\r\n// axios\r\n//   .get(\"/ingredients.json\")\r\n//   .then(response => {\r\n//     this.setState({ ingredients: response.data });\r\n//   })\r\n//   .catch(error => {\r\n//     this.setState({ error: true });\r\n//   });\r\n//}\r\n// purchaseContinueHandler = () => {\r\n//   const queryParams = [];\r\n//   for (let ingredient in this.state.ingredients) {\r\n//     queryParams.push(\r\n//       `${encodeURIComponent(ingredient)}=${encodeURIComponent(\r\n//         this.state.ingredients[ingredient]\r\n//       )}`\r\n//     );\r\n//   }\r\n//   queryParams.push(\"price=\" + this.props.totalPrice);\r\n//   const queryString = queryParams.join(\"&\");\r\n//   this.props.history.push({\r\n//     pathname: \"/checkout\",\r\n//     search: `?${queryString}`\r\n//   });\r\n// };\r\n// addIngredientHandler = type => {\r\n//   const oldCount = this.state.ingredients[type];\r\n//   const updatedCount = oldCount + 1;\r\n//   const UpdatedIngredients = {\r\n//     ...this.state.ingredients\r\n//   };\r\n//   UpdatedIngredients[type] = updatedCount;\r\n//   const priceAddition = INGREDIENT_PRICES[type];\r\n//   const oldPrice = this.state.totalPrice;\r\n//   const newPrice = oldPrice + priceAddition;\r\n//   this.setState({\r\n//     ingredients: UpdatedIngredients,\r\n//     totalPrice: newPrice\r\n//   });\r\n//   this.updatePurchaseState(UpdatedIngredients);\r\n// };\r\n\r\n// removeIngredientHandler = type => {\r\n//   const oldCount = this.state.ingredients[type];\r\n//   if (oldCount <= 0) {\r\n//     return;\r\n//   }\r\n//   const updatedCount = oldCount - 1;\r\n//   const UpdatedIngredients = {\r\n//     ...this.state.ingredients\r\n//   };\r\n//   UpdatedIngredients[type] = updatedCount;\r\n//   const priceRemove = INGREDIENT_PRICES[type];\r\n//   const oldPrice = this.state.totalPrice;\r\n//   const newPrice = oldPrice - priceRemove;\r\n//   this.setState({\r\n//     ingredients: UpdatedIngredients,\r\n//     totalPrice: newPrice\r\n//   });\r\n//   this.updatePurchaseState(UpdatedIngredients);\r\n// };\r\n","import * as actionTypes from './actionTypes';\r\nimport axios from \"../../axios-orders\";\r\n\r\nexport const addIngredient = (name) => {\r\n    return {\r\n        type: actionTypes.ADD_INGREDIENT,\r\n        ingredientName: name\r\n    };\r\n}\r\n\r\nexport const removeIngredient = (name) => {\r\n    return {\r\n        type: actionTypes.REMOVE_INGREDIENT,\r\n        ingredientName: name\r\n    };\r\n}\r\n\r\nexport const setIngredients = (initIngredients) => {\r\n    return {\r\n        type: actionTypes.SET_INGREDIENTS,\r\n        ingredients: initIngredients\r\n    }\r\n}\r\n\r\nexport const fetchIngredientsFailed = () => {\r\n    return { type: actionTypes.FETCH_INGREDIENTS_FAILD }\r\n\r\n}\r\n\r\nexport const initIngredients = () => {\r\n    return dispatch => {\r\n        axios\r\n            .get(\"/ingredients.json\")\r\n            .then(response => {\r\n                console.log(`my object ${response.data}`);\r\n                dispatch(setIngredients(response.data));\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchIngredientsFailed());\r\n            });\r\n    }\r\n};","export const ADD_INGREDIENT = 'ADD_INGREDIENT';\r\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';\r\nexport const SET_INGREDIENTS = 'SET_INGREDIENTS';\r\nexport const FETCH_INGREDIENTS_FAILD = 'FETCH_INGREDIENTS_FAILD';\r\n\r\nexport const PURCHASE_BURGER_START = 'PURCHASE_BURGER_START';\r\nexport const PURCHASE_BURGER_SUCCESS = 'PURCHASE_BURGER_SUCCESS';\r\nexport const PURCHASE_BURGER_FAIL = 'PURCHASE_BURGER_FAIL';\r\nexport const PURCHASE_INIT = 'PURCHASE_INIT';\r\n\r\nexport const FETCH_ORDERS_START = 'FETCH_ORDERS_START';\r\nexport const FETCH_ORDERS_SUCCESS = 'FETCH_ORDERS_SUCCESS';\r\nexport const FETCH_ORDERS_FAIL = 'FETCH_ORDERS_FAIL';","import * as actionTypes from \"./actionTypes\";\r\nimport axios from \"../../axios-orders\";\r\n\r\nexport const purchaseBurgerSuccess = (id, orderData) => {\r\n  return {\r\n    type: actionTypes.PURCHASE_BURGER_SUCCESS,\r\n    orderId: id,\r\n    orderData: orderData\r\n  };\r\n};\r\n\r\nexport const purchaseBurgerFail = error => {\r\n  return {\r\n    type: actionTypes.PURCHASE_BURGER_FAIL,\r\n    error: error\r\n  };\r\n};\r\n\r\nexport const purchaseBurgerStart = () => {\r\n  return {\r\n    type: actionTypes.PURCHASE_BURGER_START\r\n  };\r\n};\r\n\r\nexport const purchaseBurger = orderData => {\r\n  return dispatch => {\r\n    dispatch(purchaseBurgerStart());\r\n    axios\r\n      .post(\"/orders.json\", orderData)\r\n      .then(response => {\r\n        dispatch(purchaseBurgerSuccess(response.data.name, orderData));\r\n      })\r\n      .catch(error => {\r\n        dispatch(purchaseBurgerFail(error));\r\n      });\r\n  };\r\n};\r\n\r\nexport const purchaseInit = () => {\r\n  return {\r\n    type: actionTypes.PURCHASE_INIT\r\n  };\r\n};\r\n\r\nexport const fetchOrdersSuccess = orders => {\r\n  return {\r\n    type: actionTypes.FETCH_ORDERS_SUCCESS,\r\n    orders: orders\r\n  };\r\n};\r\n\r\nexport const fetchOrdersFail = error => {\r\n  return {\r\n    type: actionTypes.FETCH_ORDERS_FAIL,\r\n    error: error\r\n  };\r\n};\r\n\r\nexport const fetchOrdersStart = () => {\r\n  return {\r\n    type: actionTypes.FETCH_ORDERS_START\r\n  };\r\n};\r\n\r\nexport const fetchOrders = () => {\r\n  return dispatch => {\r\n    dispatch(fetchOrdersStart());\r\n    axios\r\n      .get(\"/orders.json\")\r\n      .then(res => {\r\n        const fetchedOrders = [];\r\n        for (let key in res.data) {\r\n          fetchedOrders.push({\r\n            ...res.data[key],\r\n            id: key\r\n          });\r\n        }\r\n        dispatch(fetchOrdersSuccess(fetchedOrders));\r\n      })\r\n      .catch(err => {\r\n        dispatch(fetchOrdersFail(err));\r\n      });\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport styles from \"./input.styles.css\";\r\nconst input = props => {\r\n  let inputElement = null;\r\n  let validationError = null;\r\n  const inputClasses = [styles.InputElement];\r\n  if (props.invalid && props.shouldValidate && props.touched) {\r\n    validationError = <p>Please enter a valid value!</p>;\r\n    inputClasses.push(styles.Invalid);\r\n  }\r\n  switch (props.elementType) {\r\n    case \"input\":\r\n      inputElement = (\r\n        <input\r\n          className={inputClasses.join(\" \")}\r\n          {...props.elementConfig}\r\n          value={props.value}\r\n          onChange={props.changed}\r\n        />\r\n      );\r\n      break;\r\n    case \"textarea\":\r\n      inputElement = (\r\n        <textarea\r\n          className={inputClasses.join(\" \")}\r\n          {...props.elementConfig}\r\n          value={props.value}\r\n          onChange={props.changed}\r\n        />\r\n      );\r\n      break;\r\n    case \"select\":\r\n      inputElement = (\r\n        <select\r\n          className={inputClasses.join(\" \")}\r\n          value={props.value}\r\n          onChange={props.changed}\r\n        >\r\n          {props.elementConfig.options.map(option => (\r\n            <option key={option.value} value={option.value}>\r\n              {option.displayValue}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      );\r\n      break;\r\n    default:\r\n      inputElement = (\r\n        <input\r\n          className={styles.InputElement}\r\n          {...props.elementConfig}\r\n          value={props.value}\r\n          onChange={props.changed}\r\n        />\r\n      );\r\n      break;\r\n  }\r\n\r\n  return (\r\n    <div className={styles.Input}>\r\n      <label className={styles.Label}>{props.label}</label>\r\n      {inputElement}\r\n      {validationError}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default input;\r\n","import React, { Component } from \"react\";\r\nimport Button from \"../../../components/UI/button/button.component\";\r\nimport styes from \"./contact-data.styles.css\";\r\nimport Spinner from \"../../../components/UI/spinner/spinner.component\";\r\nimport axios from \"../../../axios-orders\";\r\nimport Input from \"../../../components/UI/input/input.component\";\r\nimport { connect } from \"react-redux\";\r\nimport WithErrorHandler from \"../../../hoc/with-error-handler/with-error-handler.component\";\r\nimport * as actions from \"../../../store/actions/index\";\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    ings: state.burgerBuilde.ingredients,\r\n    price: state.burgerBuilde.totalPrice,\r\n    loading: state.order.loading\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onOrderBurger: orderData => dispatch(actions.purchaseBurger(orderData))\r\n  };\r\n};\r\n\r\nclass ContactData extends Component {\r\n  state = {\r\n    orderForm: {\r\n      name: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"text\",\r\n          placeholder: \"Your Name\"\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true\r\n        },\r\n        valid: false,\r\n        touched: false\r\n      },\r\n      street: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"text\",\r\n          placeholder: \"Street\"\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true\r\n        },\r\n        valid: false,\r\n        touched: false\r\n      },\r\n      zipCode: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"text\",\r\n          placeholder: \"ZIP Code\"\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          minLength: 5,\r\n          maxLength: 5,\r\n          isNumeric: true\r\n        },\r\n        valid: false,\r\n        touched: false\r\n      },\r\n      country: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"text\",\r\n          placeholder: \"Country\"\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true\r\n        },\r\n        valid: false,\r\n        touched: false\r\n      },\r\n      email: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"email\",\r\n          placeholder: \"Your E-Mail\"\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          isEmail: true\r\n        },\r\n        valid: false,\r\n        touched: false\r\n      },\r\n      deliveryMethod: {\r\n        elementType: \"select\",\r\n        elementConfig: {\r\n          options: [\r\n            { value: \"fastest\", displayValue: \"Fastest\" },\r\n            { value: \"cheapest\", displayValue: \"Cheapest\" }\r\n          ]\r\n        },\r\n        value: \"fastest\",\r\n        validation: {},\r\n        valid: true\r\n      }\r\n    },\r\n    formIsValid: false\r\n  };\r\n\r\n  orderHandler = event => {\r\n    event.preventDefault();\r\n\r\n    const formData = {};\r\n    for (let formElementIdentifier in this.state.orderForm) {\r\n      formData[formElementIdentifier] = this.state.orderForm[\r\n        formElementIdentifier\r\n      ].value;\r\n    }\r\n\r\n    const order = {\r\n      ingredients: this.props.ings,\r\n      price: this.props.price,\r\n      orderData: formData\r\n    };\r\n\r\n    this.props.onOrderBurger(order);\r\n  };\r\n\r\n  checkValidity(value, rules) {\r\n    let isValid = true;\r\n    if (!rules) {\r\n      return true;\r\n    }\r\n\r\n    if (rules.required) {\r\n      isValid = value.trim() !== \"\" && isValid;\r\n    }\r\n\r\n    if (rules.minLength) {\r\n      isValid = value.length >= rules.minLength && isValid;\r\n    }\r\n\r\n    if (rules.maxLength) {\r\n      isValid = value.length <= rules.maxLength && isValid;\r\n    }\r\n\r\n    if (rules.isEmail) {\r\n      const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n      isValid = pattern.test(value) && isValid;\r\n    }\r\n\r\n    if (rules.isNumeric) {\r\n      const pattern = /^\\d+$/;\r\n      isValid = pattern.test(value) && isValid;\r\n    }\r\n\r\n    return isValid;\r\n  }\r\n\r\n  inputChangedHandler = (event, inputIdentifier) => {\r\n    const updatedOrderForm = {\r\n      ...this.state.orderForm\r\n    };\r\n    const updatedFormElement = {\r\n      ...updatedOrderForm[inputIdentifier]\r\n    };\r\n    updatedFormElement.value = event.target.value;\r\n    updatedFormElement.valid = this.checkValidity(\r\n      updatedFormElement.value,\r\n      updatedFormElement.validation\r\n    );\r\n    updatedFormElement.touched = true;\r\n    updatedOrderForm[inputIdentifier] = updatedFormElement;\r\n\r\n    let formIsValid = true;\r\n    for (let inputIdentifier in updatedOrderForm) {\r\n      formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid;\r\n    }\r\n    this.setState({ orderForm: updatedOrderForm, formIsValid: formIsValid });\r\n  };\r\n\r\n  render() {\r\n    const formElementsArray = [];\r\n    for (let key in this.state.orderForm) {\r\n      formElementsArray.push({\r\n        id: key,\r\n        config: this.state.orderForm[key]\r\n      });\r\n    }\r\n    let form = (\r\n      <form onSubmit={this.orderHandler}>\r\n        {formElementsArray.map(formElement => (\r\n          <Input\r\n            key={formElement.id}\r\n            elementType={formElement.config.elementType}\r\n            elementConfig={formElement.config.elementConfig}\r\n            value={formElement.config.value}\r\n            invalid={!formElement.config.valid}\r\n            shouldValidate={formElement.config.validation}\r\n            touched={formElement.config.touched}\r\n            changed={event => this.inputChangedHandler(event, formElement.id)}\r\n          />\r\n        ))}\r\n        <Button btnType=\"Success\" disabled={!this.state.formIsValid}>\r\n          ORDER\r\n        </Button>\r\n      </form>\r\n    );\r\n    if (this.props.loading) {\r\n      form = <Spinner />;\r\n    }\r\n    return (\r\n      <div className={styes.ContactData}>\r\n        <h4>Enter your Contact Data</h4>\r\n        {form}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(WithErrorHandler(ContactData, axios));\r\n\r\n// axios\r\n// .post(\"/orders.json\", order)\r\n// .then(response => {\r\n//   this.setState({ loading: false });\r\n//   this.props.history.push(\"/\");\r\n// })\r\n// .catch(error => {\r\n//   this.setState({ loading: false });\r\n// });\r\n","import React from \"react\";\r\nimport Burger from \"../../burger/burger.component\";\r\nimport Button from \"../../UI/button/button.component\";\r\nimport styles from \"./checkout-summery.styles.css\";\r\nconst checkoutSummery = props => {\r\n  return (\r\n    <div className={styles.CheckoutSummary}>\r\n      <h1>We hope it tastes well!</h1>\r\n      <div style={{ width: \"100%\", margin: \"auto\" }}>\r\n        <Burger ingredients={props.ingredients} />\r\n      </div>\r\n      <Button bntType=\"Danger\" clicked={props.checkoutCancelled}>\r\n        CANCEL\r\n      </Button>\r\n      <Button bntType=\"Success\" clicked={props.checkoutContinued}>\r\n        CONTINUE\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default checkoutSummery;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport Contactdata from \"./contact-data/contact-data.component\";\r\nimport CheckoutSummery from \"../../components/order/checkout-summery/checkout-summery.component\";\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    ings: state.burgerBuilde.ingredients,\r\n    purchased: state.order.purchased\r\n  };\r\n};\r\n\r\nclass Checkout extends Component {\r\n  checkoutCancelledHandler = () => this.props.history.goBack();\r\n\r\n  checkoutContinuedHandler = () =>\r\n    this.props.history.replace(\"/checkout/contact-data\");\r\n\r\n  render() {\r\n    let summary = <Redirect to=\"/\" />;\r\n\r\n    if (this.props.ings) {\r\n      const purchasedRedirect = this.props.purchased ? (\r\n        <Redirect to=\"/\" />\r\n      ) : null;\r\n\r\n      summary = (\r\n        <div>\r\n          {purchasedRedirect}\r\n          <CheckoutSummery\r\n            checkoutCancelled={this.checkoutCancelledHandler}\r\n            checkoutContinued={this.checkoutContinuedHandler}\r\n            ingredients={this.props.ings}\r\n          />\r\n          <Route\r\n            path={`${this.props.match.path}/contact-data`}\r\n            component={Contactdata}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return summary;\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Checkout);\r\n\r\n// state = {\r\n//   ingredients: null,\r\n//   totalPrice: 0\r\n// };\r\n\r\n// componentWillMount() {\r\n//   const query = new URLSearchParams(this.props.location.search);\r\n//   const ingredients = {};\r\n//   let price = 0;\r\n//   for (let param of query.entries()) {\r\n//     if (param[0] === \"price\") {\r\n//       price = param[1];\r\n//     } else {\r\n//       ingredients[param[0]] = +param[1];\r\n//     }\r\n//   }\r\n//   this.setState({ ingredients: ingredients, totalPrice: price });\r\n// }\r\n","import React from \"react\";\r\nimport styles from \"./order.styles.css\";\r\nconst order = props => {\r\n  const ingredients = [];\r\n  for (let ingredientName in props.ingredients) {\r\n    ingredients.push({\r\n      name: ingredientName,\r\n      amount: props.ingredients[ingredientName]\r\n    });\r\n  }\r\n\r\n  const ingredientOutput = ingredients.map(ig => {\r\n    return (\r\n      <span\r\n        style={{\r\n          textTransform: \"capitalize\",\r\n          display: \"inline-block\",\r\n          margin: \"0 8px\",\r\n          border: \"1px solid #ccc\",\r\n          padding: \"5px\"\r\n        }}\r\n        key={ig.name}\r\n      >\r\n        {ig.name} ({ig.amount})\r\n      </span>\r\n    );\r\n  });\r\n  return (\r\n    <div className={styles.Order}>\r\n      <p>Ingredients: {ingredientOutput}</p>\r\n      <p>\r\n        Price: <strong>USD {parseFloat(props.price).toFixed(2)}</strong>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default order;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n//import styles from './orders.styles.css'\r\nimport Order from \"../../components/order/order.component\";\r\nimport axios from \"../../axios-orders\";\r\nimport withErrorHandler from \"../../hoc/with-error-handler/with-error-handler.component\";\r\nimport * as actions from \"../../store/actions/index\";\r\nimport Spinner from \"../../components/UI/spinner/spinner.component\";\r\n\r\nclass Orders extends Component {\r\n  componentDidMount() {\r\n    this.props.onFetchOrders();\r\n  }\r\n  render() {\r\n    let orders = <Spinner />;\r\n\r\n    if (!this.props.loading) {\r\n      orders = this.props.Orders.map(order => (\r\n        <Order\r\n          key={order.id}\r\n          ingredients={order.ingredients}\r\n          price={order.price}\r\n        />\r\n      ));\r\n    }\r\n\r\n    return <div>{orders}</div>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    Orders: state.order.orders,\r\n    loading: state.order.loading\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onFetchOrders: () => dispatch(actions.fetchOrders())\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withErrorHandler(Orders, axios));\r\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom'\nimport Layout from './hoc/layout/layout.component';\nimport BurgerBuilder from './containers/burger-builder/burger-builder.component';\nimport Checkout from './containers/checkout/checkout.component';\nimport Orders from './containers/orders/orders.component'\nfunction App() {\n  return (\n    <div >\n      <Layout>\n        <Switch>\n          <Route path=\"/checkout\" component={Checkout} />\n          <Route path=\"/orders\" component={Orders} />\n          <Route exact path=\"/\" component={BurgerBuilder} />\n        </Switch>\n      </Layout>\n    </div>\n  );\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const updateObject = (oldObject, updateObject) => {\r\n  return {\r\n    ...oldObject,\r\n    ...updateObject\r\n  };\r\n};\r\n","import * as actionTypes from \"../actions/actionTypes\";\r\nimport { updateObject } from \"../utility\";\r\nconst initialState = {\r\n  ingredients: null,\r\n  totalPrice: 4,\r\n  error: false\r\n};\r\n\r\nconst INGREDIENT_PRICES = {\r\n  salad: 0.5,\r\n  bacon: 0.4,\r\n  cheese: 1.3,\r\n  meat: 0.7\r\n};\r\n\r\nconst addIngredient = (state, action) => {\r\n  const updatedIngredient = {\r\n    [action.ingredientName]: state.ingredients[action.ingredientName] + 1\r\n  };\r\n  const updatedIngredients = updateObject(state.ingredients, updatedIngredient);\r\n  const updateState = {\r\n    ingredients: updatedIngredients,\r\n    totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName]\r\n  };\r\n  return updateObject(state, updateState);\r\n};\r\n\r\nconst removeIngredient = (state, action) => {\r\n  const updatedIng = {\r\n    [action.ingredientName]: state.ingredients[action.ingredientName] - 1\r\n  };\r\n  const updatedIngs = updateObject(state.ingredients, updatedIng);\r\n  const updateSt = {\r\n    ingredients: updatedIngs,\r\n    totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName]\r\n  };\r\n  return updateObject(state, updateSt);\r\n};\r\n\r\nconst setIngredient = (state, action) => {\r\n  return updateObject(state, {\r\n    ingredients: {\r\n      salad: action.ingredients.salad,\r\n      bacon: action.ingredients.bacon,\r\n      cheese: action.ingredients.cheese,\r\n      meat: action.ingredients.meat\r\n    },\r\n    totalPrice: 4,\r\n    error: false\r\n  });\r\n};\r\n\r\nconst fetchIngredientFaild = (state, action) => {\r\n  return updateObject(state, { error: true });\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.ADD_INGREDIENT:\r\n      return addIngredient(state, action);\r\n    case actionTypes.REMOVE_INGREDIENT:\r\n      return removeIngredient(state, action);\r\n    case actionTypes.SET_INGREDIENTS:\r\n      return setIngredient(state, action);\r\n    case actionTypes.FETCH_INGREDIENTS_FAILD:\r\n      return fetchIngredientFaild(state, action);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import * as actionTypes from \"../actions/actionTypes\";\r\nimport { updateObject } from \"../utility\";\r\n\r\nconst initialState = {\r\n  orders: [],\r\n  loading: false,\r\n  purchased: false\r\n};\r\n\r\nconst purchaseInit = (state, action) => {\r\n  return updateObject(state, { purchased: false });\r\n};\r\n\r\nconst purchaseBurgerStart = (state, action) => {\r\n  return updateObject(state, { loading: true });\r\n};\r\n\r\nconst purchaseBurgerSuccess = (state, action) => {\r\n  const newOrder = updateObject(action.orderData, { id: action.orderId });\r\n  return updateObject(state, {\r\n    loading: false,\r\n    purchased: true,\r\n    orders: state.orders.concat(newOrder)\r\n  });\r\n};\r\n\r\nconst purchaseBurgerFail = (state, action) => {\r\n  return updateObject(state, { loading: false });\r\n};\r\n\r\nconst fetchOrdersStart = (state, action) => {\r\n  return updateObject(state, { loading: true });\r\n};\r\n\r\nconst fetchOrdersSuccess = (state, action) => {\r\n  return updateObject(state, { orders: action.orders, loading: false });\r\n};\r\nconst fetchOrdersFail = (state, action) => {\r\n  return updateObject(state, { loading: false });\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.PURCHASE_INIT:\r\n      return purchaseInit(state, action);\r\n    case actionTypes.PURCHASE_BURGER_START:\r\n      return purchaseBurgerStart(state, action);\r\n    case actionTypes.PURCHASE_BURGER_SUCCESS:\r\n      return purchaseBurgerSuccess(state, action);\r\n    case actionTypes.PURCHASE_BURGER_FAIL:\r\n      return purchaseBurgerFail(state, action);\r\n    case actionTypes.FETCH_ORDERS_START:\r\n      return fetchOrdersStart(state, action);\r\n    case actionTypes.FETCH_ORDERS_SUCCESS:\r\n      return fetchOrdersSuccess(state, action);\r\n    case actionTypes.FETCH_ORDERS_FAIL:\r\n      return fetchOrdersFail(state, action);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport burgerBuildeRreducer from './store/reducers/burgerBuilder';\nimport orderRreducer from './store/reducers/order';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({\n    burgerBuilde: burgerBuildeRreducer,\n    order: orderRreducer\n});\n\nconst strore = createStore(rootReducer, composeEnhancers(\n    applyMiddleware(thunk)\n));\n\nconst app = (\n    <Provider store={strore}>\n        <BrowserRouter basename=\"/react-burger-builder-app\">\n            <App />\n        </BrowserRouter>\n    </Provider>\n)\n\nReactDOM.render(app, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}